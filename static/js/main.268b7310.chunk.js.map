{"version":3,"sources":["services/api.js","components/GlobalCard/index.js","services/getRootPath.js","components/CountryCard/index.js","pages/main/index.js","pages/country/index.js","components/Header/index.js","routes.js","App.js","index.js"],"names":["api","axios","create","baseURL","GlobalData","props","nf","Intl","NumberFormat","globaldata","active","total_cases","total_deaths","total_recovered","className","format","total_new_cases_today","total_new_deaths_today","rootpath","CountryCard","country","code","to","src","toLowerCase","alt","title","Main","useState","countries","setCountries","globalData","setGlobalData","isPageLoaded","setIsPageLoaded","lastUpdatedSeconds","setLastUpdatedSeconds","updatePageCount","setUpdatePageCount","useEffect","loadCountryData","a","get","response","data","loadGlobalData","interval","setInterval","clearInterval","type","color","map","data_map","key","ourid","Country","country_code","useParams","setCountry","countryTimeline","setCountryTimeline","then","timelinedates","timelinedata","Object","keys","forEach","push","cav","document","getElementById","getContext","chart","options","tooltips","mode","intersect","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","item","new_daily_cases","new_daily_deaths","console","log","id","Header","Routes","path","component","exact","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.268b7310.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst api_route = process.env.NODE_ENV === 'development' ? 'http://localhost:3333' : 'https://apicoviddashboard.herokuapp.com'\nconst api = axios.create({ baseURL: api_route })\n\nexport default api","import React from 'react';\n\nimport './styles.css';\n\nexport default function GlobalData(props) {\n    const nf = new Intl.NumberFormat();\n    const { globaldata } = props;\n\n    const active = (globaldata.total_cases - globaldata.total_deaths - globaldata.total_recovered)\n    return (\n        <div>\n            <p className=\"text-center text-white title-components\">Global Data</p>\n            <article className=\"global-article shadow\">\n\n                <div className=\"row\">\n                    <div className=\"col font-weight-bold text-center global-data-title text-light\">Cases</div>\n                    <div className=\"col font-weight-bold text-center global-data-title text-light\">Deaths</div>\n                    <div className=\"col font-weight-bold text-center global-data-title text-light\">Recovered</div>\n                    <div className=\"col font-weight-bold text-center global-data-title text-light\">Active cases</div>\n                    <div className=\"col font-weight-bold text-center global-data-title text-light\">New cases today</div>\n                    <div className=\"col font-weight-bold text-center global-data-title text-light\">New deaths today</div>\n                    <div className=\"w-100\"></div>\n                    <div className=\"col text-center global-data-numbers color-cases\">{nf.format(globaldata.total_cases)}</div>\n                    <div className=\"col text-center global-data-numbers color-death\">{nf.format(globaldata.total_deaths)}</div>\n                    <div className=\"col text-center global-data-numbers color-recovered\">{nf.format(globaldata.total_recovered)}</div>\n                    <div className=\"col text-center global-data-numbers color-active\">{nf.format(active)}</div>\n                    <div className=\"col text-center global-data-numbers color-new-case\">{nf.format(globaldata.total_new_cases_today)}</div>\n                    <div className=\"col text-center global-data-numbers color-new-death\">{nf.format(globaldata.total_new_deaths_today)}</div>\n                </div>\n                <div>\n                    {/* <button className='btn btn-info' onClick={this.createNotification('info')}>Info</button>\n                    <hr />\n                    <button className='btn btn-success' onClick={this.createNotification('success')}>Success</button>\n                    <hr />\n                    <button className='btn btn-warning' onClick={this.createNotification('warning')}>Warning</button>\n                    <hr />\n                    <button className='btn btn-danger' onClick={this.createNotification('error')}>Error</button> */}\n                </div>\n            </article>\n        </div>\n    )\n}","const rootpath = (process.env.NODE_ENV === 'development' ? '/' : '/Coronavirus-Dashboard/');\nexport default rootpath;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css'\nimport rootpath from '../../services/getRootPath';\n\nexport default function CountryCard(props) {\n    const nf = new Intl.NumberFormat();\n    let { country } = props;\n\n    country.code = (country.code === 'DP' ? 'JP' : country.code);\n\n    return (\n        <div className=\"col-lg-4\">\n            <Link to={`${rootpath}${country.code}`} className=\"unstyled-link\">\n                <article className=\"pais-article shadow\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-3\">\n                            <div className=\"row\">\n                                <div className=\"col my-auto\">\n                                    <div className=\"bandeira text-center\">\n                                        {/* <img src={\"https://www.countryflags.io/\" + country.code + \"/flat/64.png\"} alt={\"Bandeira \" + country.title} /> */}\n                                        <img className=\"bandeira-img\" src={\"https://cdn.u21.io/flags/4x3/\" + (country.code).toLowerCase() + \".svg\"} alt={\"Bandeira \" + country.title} />\n                                    </div>\n                                    <div className=\"font-weight-bold text-center text-light\">{country.title}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col my-auto\">\n                            <div className=\"row text-light\">\n                                {/* <div className=\"col font-weight-bold text-center\">Pais</div> */}\n                                <div className=\"col font-weight-bold text-center\">Cases</div>\n                                <div className=\"col font-weight-bold text-center\">Deaths</div>\n                                <div className=\"col font-weight-bold text-center\">Recovered</div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col text-center color-cases\">{nf.format(country.total_cases)}</div>\n                                <div className=\"col text-center color-death\">{nf.format(country.total_deaths)}</div>\n                                <div className=\"col text-center color-recovered\">{nf.format(country.total_recovered)}</div>\n                            </div>\n                        </div>\n                    </div>\n                </article>\n            </Link>\n        </div >\n    )\n}","import React, { useEffect, useState } from 'react'\nimport api from '../../services/api'\nimport { NotificationContainer } from 'react-notifications';\n//NotificationManager\nimport 'react-notifications/lib/notifications.css';\nimport Loading from 'react-loading';\n\nimport GlobalCard from '../../components/GlobalCard'\nimport CountryCard from '../../components/CountryCard'\n\nexport default function Main() {\n    const [countries, setCountries] = useState([]);\n    const [globalData, setGlobalData] = useState([]);\n    const [isPageLoaded, setIsPageLoaded] = useState(false);\n    const [lastUpdatedSeconds, setLastUpdatedSeconds] = useState(0);\n    const [updatePageCount, setUpdatePageCount] = useState(0);\n\n    //Get Country Data\n    useEffect(() => {\n        const loadCountryData = async () => {\n            const response = await api.get(`/countries`);\n            setCountries(response.data);\n        }\n\n        const loadGlobalData = async () => {\n            const response = await api.get(`/global`);\n            setGlobalData(response.data);\n            setIsPageLoaded(true);\n        }\n        loadCountryData();\n        loadGlobalData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [updatePageCount]);\n\n\n    useEffect(() => {\n        let interval = null\n        if (isPageLoaded) {\n            interval = setInterval(() => {\n                setLastUpdatedSeconds(lastUpdatedSeconds => lastUpdatedSeconds + 1);\n                if (lastUpdatedSeconds % 10 === 0 && lastUpdatedSeconds !== 0) {\n                    setUpdatePageCount(updatePageCount => updatePageCount + 1);\n                    setLastUpdatedSeconds(0);\n                }\n            }, 1000);\n        }\n\n        return () => clearInterval(interval);\n    }, [isPageLoaded, lastUpdatedSeconds]);\n\n    return isPageLoaded === false\n        ? (\n            <div className=\"d-flex vh-100 justify-content-center align-items-center\">\n                <Loading type={\"bars\"} color={\"#eee\"} />\n            </div>\n        )\n        : (\n            <div className=\"container-fluid\">\n\n                <NotificationContainer />\n\n                <GlobalCard globaldata={globalData} />\n\n                <div className=\"row justify-content-md-center\">\n                    <div className=\"col-12\">\n                        <p className=\"text-center text-white title-components\">Countries Data</p>\n                    </div>\n                    {countries.map(data_map => (\n                        <CountryCard\n                            key={data_map.ourid}\n                            country={data_map} />\n                    ))}\n                </div >\n            </div >\n        )\n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport api from '../../services/api';\nimport Loading from 'react-loading';\nimport * as chart from 'chart.js'\n\nimport './style.css'\n\nexport default function Country() {\n    const { country_code } = useParams();\n    const [isPageLoaded, setIsPageLoaded] = useState(false);\n    const [country, setCountry] = useState([]);\n    const [countryTimeline, setCountryTimeline] = useState([]);\n\n    const nf = new Intl.NumberFormat();\n    //Get Country Timeline\n    useEffect(() => {\n        api.get(`/country_timeline/${country_code}`).then(response => {\n            setCountryTimeline(response.data[0]);\n            setIsPageLoaded(true);\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    //Get Country Data\n    useEffect(() => {\n        api.get(`/country/${country_code}`).then(response => {\n            setCountry(response.data);\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    //Mount graph cases\n    useEffect(() => {\n        if (isPageLoaded) {\n            let timelinedates = [];\n            let timelinedata = [];\n\n            Object.keys(countryTimeline).forEach(key => {\n                timelinedates.push(key);\n                timelinedata.push(countryTimeline[key]);\n            })\n\n            let cav = document.getElementById(`cav_cases_${country_code}`).getContext('2d');\n            new chart(cav, {\n                type: 'line',\n                options: {\n                    tooltips: {\n                        mode: 'index',\n                        intersect: false,\n                    }\n                },\n                data: {\n                    labels: timelinedates,\n                    //labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                    datasets: [\n                        {\n                            label: 'Cases',\n                            fill: true,\n                            lineTension: 0.1,\n                            backgroundColor: 'rgba(14, 233, 203,0.4)',\n                            borderColor: '#0ee9cb',\n                            borderCapStyle: 'butt',\n                            borderDash: [],\n                            borderDashOffset: 0.0,\n                            borderJoinStyle: 'miter',\n                            pointBorderColor: '#0ee9cb',\n                            pointBackgroundColor: '#0ee9cb',\n                            pointBorderWidth: 1,\n                            pointHoverRadius: 5,\n                            pointHoverBackgroundColor: '#0ee9cb',\n                            pointHoverBorderColor: 'rgba(220,220,220,1)',\n                            pointHoverBorderWidth: 2,\n                            pointRadius: 2,\n                            pointHitRadius: 5,\n                            data: timelinedata.map(item => (\n                                item.total_cases\n                            ))\n                        },\n                        {\n                            label: 'Deaths',\n                            fill: true,\n                            lineTension: 0.1,\n                            backgroundColor: 'rgba(243, 83, 83,1)',\n                            borderColor: '#f35353',\n                            borderCapStyle: 'butt',\n                            borderDash: [],\n                            borderDashOffset: 0.0,\n                            borderJoinStyle: 'miter',\n                            pointBorderColor: '#f35353',\n                            pointBackgroundColor: '#f35353',\n                            pointBorderWidth: 1,\n                            pointHoverRadius: 5,\n                            pointHoverBackgroundColor: '#f35353',\n                            pointHoverBorderColor: '#f35353',\n                            pointHoverBorderWidth: 2,\n                            pointRadius: 2,\n                            pointHitRadius: 5,\n                            data: timelinedata.map(item => (\n                                item.total_deaths\n                            )),\n                        }\n                    ]\n                },\n            });\n\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isPageLoaded]);\n\n    //Mount graph now\n    useEffect(() => {\n        if (isPageLoaded) {\n            let timelinedates = [];\n            let timelinedata = [];\n\n            Object.keys(countryTimeline).forEach(key => {\n                timelinedates.push(key);\n                timelinedata.push(countryTimeline[key]);\n            })\n\n            let cav = document.getElementById(`cav_now_${country_code}`).getContext('2d');\n            new chart(cav, {\n                type: 'line',\n                options: {\n                    tooltips: {\n                        mode: 'index',\n                        intersect: false,\n                    }\n                },\n                data: {\n                    labels: timelinedates,\n                    //labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                    datasets: [\n                        {\n                            label: 'Cases',\n                            fill: true,\n                            lineTension: 0.1,\n                            backgroundColor: 'rgba(255, 138, 55,0.4)',\n                            borderColor: '#ff8a37',\n                            borderCapStyle: 'butt',\n                            borderDash: [],\n                            borderDashOffset: 0.0,\n                            borderJoinStyle: 'miter',\n                            pointBorderColor: '#ff8a37',\n                            pointBackgroundColor: '#ff8a37',\n                            pointBorderWidth: 1,\n                            pointHoverRadius: 5,\n                            pointHoverBackgroundColor: '#ff8a37',\n                            pointHoverBorderColor: '#ff8a37',\n                            pointHoverBorderWidth: 2,\n                            pointRadius: 2,\n                            pointHitRadius: 5,\n                            data: timelinedata.map(item => (\n                                item.new_daily_cases\n                            ))\n                        },\n                        {\n                            label: 'Deaths',\n                            fill: true,\n                            lineTension: 0.1,\n                            backgroundColor: 'rgba(175, 28, 28,1)',\n                            borderColor: '#af1c1c',\n                            borderCapStyle: 'butt',\n                            borderDash: [],\n                            borderDashOffset: 0.0,\n                            borderJoinStyle: 'miter',\n                            pointBorderColor: '#af1c1c',\n                            pointBackgroundColor: '#af1c1c',\n                            pointBorderWidth: 1,\n                            pointHoverRadius: 5,\n                            pointHoverBackgroundColor: '#af1c1c',\n                            pointHoverBorderColor: '#af1c1c',\n                            pointHoverBorderWidth: 2,\n                            pointRadius: 2,\n                            pointHitRadius: 5,\n                            data: timelinedata.map(item => (\n                                item.new_daily_deaths\n                            )),\n                        }\n                    ]\n                },\n            });\n\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isPageLoaded]);\n\n    const active = (country.total_cases - country.total_deaths - country.total_recovered)\n\n    return isPageLoaded === false\n        ? (\n            <div className=\"d-flex vh-100 justify-content-center align-items-center\">\n                <Loading type={\"bars\"} color={\"#eee\"} />\n            </div>\n        )\n        : (\n            <div className=\"container-fluid\">\n                {console.log(country)}\n                <div className=\"row text-white\">\n                    <div className=\"col-12\">\n                        <img className=\"float-left bandeira-img\" src={\"https://cdn.u21.io/flags/4x3/\" + (country_code).toLowerCase() + \".svg\"} alt={\"Bandeira \" + country.title} />\n                        <h2 className=\"float-left ml-4 mt-2\">{country.title}</h2>\n                        <article className=\"float-left global-article shadow\">\n\n                            <div className=\"row\">\n                                <div className=\"col font-weight-bold text-center global-data-title text-light\">Cases</div>\n                                <div className=\"col font-weight-bold text-center global-data-title text-light\">Deaths</div>\n                                <div className=\"col font-weight-bold text-center global-data-title text-light\">Recovered</div>\n                                <div className=\"col font-weight-bold text-center global-data-title text-light\">Active cases</div>\n                                <div className=\"col font-weight-bold text-center global-data-title text-light\">New cases today</div>\n                                <div className=\"col font-weight-bold text-center global-data-title text-light\">New deaths today</div>\n                                <div className=\"w-100\"></div>\n                                <div className=\"col text-center global-data-numbers color-cases\">{nf.format(country.total_cases)}</div>\n                                <div className=\"col text-center global-data-numbers color-death\">{nf.format(country.total_deaths)}</div>\n                                <div className=\"col text-center global-data-numbers color-recovered\">{nf.format(country.total_recovered)}</div>\n                                <div className=\"col text-center global-data-numbers color-active\">{nf.format(active)}</div>\n                                <div className=\"col text-center global-data-numbers color-new-case\">{nf.format(country.total_new_cases_today)}</div>\n                                <div className=\"col text-center global-data-numbers color-new-death\">{nf.format(country.total_new_deaths_today)}</div>\n                            </div>\n                        </article>\n                    </div>\n                    <div className=\"col-6\">\n                        <section className=\"chart-div\">\n                            <h2>Timeline Cases and Deaths</h2>\n                            <canvas className=\"mt-4\" id={`cav_cases_${country_code}`} ></canvas>\n                        </section>\n                    </div>\n                    <div className=\"col-6\">\n                        <section className=\"chart-div\">\n                            <h2>Timeline New Cases and Deaths</h2>\n                            <canvas className=\"mt-4\" id={`cav_now_${country_code}`} ></canvas>\n                        </section>\n                    </div>\n                </div>\n            </div >\n        )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\nimport rootpath from '../../services/getRootPath';\n\nconst Header = () => (\n    <div id=\"main-header\" className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 shadow-sm\">\n        <h5 className=\"my-0 mr-md-auto font-weight-normal \">\n            <div className=\"blobs-container\">\n                <Link to={rootpath} className=\"text-white mt-2\">DASHBOARD</Link>\n                <div className=\"blob red\"></div>\n            </div>\n        </h5>\n        <nav className=\"my-2 my-md-0 mr-md-3\">\n            <Link to={rootpath} className=\"p-2 text-white\">Features</Link>\n        </nav>\n        {/* <a class=\"btn btn-outline-primary\" href=\"#\">Sign up</a> */}\n    </div>\n)\n\nexport default Header","import React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport Main from './pages/main'\nimport Country from './pages/country'\nimport Header from './components/Header'\n\nimport rootpath from './services/getRootPath';\n\nexport default function Routes() {\n  return (\n    <BrowserRouter>\n      <Route path={rootpath} component={Header} />\n      <Route exact path={rootpath} component={Main} />\n      <Route exact path={`${rootpath}:country_code`} component={Country} />\n    </BrowserRouter>\n  )\n}\n","import React from 'react';\nimport Routes from './routes'\n\nimport './styles.css'\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n\nconst App = () => (\n  <div className=\"App\">\n    <Routes />\n  </div >\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}