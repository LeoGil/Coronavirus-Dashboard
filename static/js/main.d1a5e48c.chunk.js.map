{"version":3,"sources":["assets/logo.png","services/api.js","components/GlobalCard/index.jsx","services/getRootPath.js","components/CountryCard/index.jsx","components/TimeLine/index.jsx","components/TimeLineCountries/index.jsx","components/PieActiveDeathRecovered/index.jsx","pages/Main/index.jsx","components/CountryDetailsCard/index.jsx","components/PieTests/index.jsx","pages/Country/index.jsx","components/Header/index.jsx","routes.jsx","App.jsx","index.jsx"],"names":["module","exports","api","axios","create","baseURL","GlobalData","globaldata","nf","Intl","NumberFormat","className","format","cases","todayCases","deaths","todayDeaths","recovered","todayRecovered","active","tests","affectedCountries","critical","rootpath","CountryCard","country","iso2","active_pct","Math","round","recovered_pct","death_pct","ceil","to","src","toLowerCase","alt","style","height","role","width","aria-valuenow","aria-valuemin","aria-valuemax","TimeLine","timeline","timelineDataLoaded","useEffect","timelinedates","timelinedataCases","timelinedataDeaths","timelinedataRecovered","timelinedataActive","Object","keys","forEach","key","push","cav","document","getElementById","getContext","Chart","type","options","tooltips","mode","intersect","legend","labels","fontColor","scales","yAxes","ticks","xAxes","data","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","map","item","id","TimeLineCountries","countries","useState","timelineCountries","setTimelineCountries","chartLoaded","setChartLoaded","undefined","countriesIso","index","a","post","response","loadTopCountriesTimeLine","timelineCountry","timelineCountryNames","length","randColor","floor","random","toString","values","PieCases","Main","setCountries","globalData","setGlobalData","isPageLoaded","setIsPageLoaded","lastUpdatedSeconds","setLastUpdatedSeconds","updatePageCount","setUpdatePageCount","timelineGlobal","setTimelineGlobal","pieLoaded","setPieLoaded","loadCountryData","get","loadGlobalData","interval","setInterval","clearInterval","then","color","dataMap","CountryDetailsCard","population","Country","countryCode","useParams","country_code","isTimeLineDataLoaded","setIsTimeLineDataLoaded","setCountry","countryTimeline","setCountryTimeline","loadCountryTimeLine","pageLoaded","Header","logo","Routes","path","component","exact","App","ReactDOM","render","StrictMode"],"mappings":"wHAAAA,EAAOC,QAAU,IAA0B,kC,0VCQ5BC,E,OAFHC,EAAMC,OAAO,CAAEC,QADrB,4C,MCDS,SAASC,EAAT,GAAqC,IAAfC,EAAc,EAAdA,WAC7BC,EAAK,IAAIC,KAAKC,aAEpB,OACE,oCACE,wBAAIC,UAAU,gCAAd,eACA,6BAASA,UAAU,kBACjB,6BAASA,UAAU,SACjB,yBAAKA,UAAU,iCAAf,QAEE,0BAAMA,UAAU,mCACbH,EAAGI,OAAOL,EAAWM,QAH1B,kBAME,0BAAMF,UAAU,sCACbH,EAAGI,OAAOL,EAAWO,cAG1B,yBAAKH,UAAU,iCAAf,SAEE,0BAAMA,UAAU,mCACbH,EAAGI,OAAOL,EAAWQ,SAH1B,mBAME,0BAAMJ,UAAU,uCACbH,EAAGI,OAAOL,EAAWS,eAG1B,yBAAKL,UAAU,iCAAf,YAEE,0BAAMA,UAAU,uCACbH,EAAGI,OAAOL,EAAWU,YAH1B,uBAME,0BAAMN,UAAU,4CACbH,EAAGI,OAAOL,EAAWW,kBAG1B,yBAAKP,UAAU,iCAAf,eAEE,0BAAMA,UAAU,oCACbH,EAAGI,OAAOL,EAAWY,SAH1B,QAME,0BAAMR,UAAU,mCACbH,EAAGI,OAAOL,EAAWa,SAG1B,yBAAKT,UAAU,iCAAf,qBAEE,0BAAMA,UAAU,sCACbH,EAAGI,OAAOL,EAAWc,oBAH1B,kBAME,0BAAMV,UAAU,sCACbH,EAAGI,OAAOL,EAAWe,e,UCzDrBC,EADkC,0BCI3Cf,EAAK,IAAIC,KAAKC,aAEL,SAASc,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACpCA,EAAQC,KAA2B,eAApBD,EAAQA,QAA2B,KAAOA,EAAQC,KACjED,EAAQC,KAA2B,qBAApBD,EAAQA,QAAiC,KAAOA,EAAQC,KAEvE,IAAMC,EAAaC,KAAKC,MAAwB,IAAjBJ,EAAQN,OAAgBM,EAAQZ,OACzDiB,EAAgBF,KAAKC,MAA2B,IAApBJ,EAAQR,UAAmBQ,EAAQZ,OAC/DkB,EAAYH,KAAKI,KAAuB,IAAjBP,EAAQV,OAAgBU,EAAQZ,OAE7D,OACE,yBAAKF,UAAU,qBACb,kBAAC,IAAD,CAAMsB,GAAE,UAAKV,GAAL,OAAgBE,EAAQC,MAAQf,UAAU,iBAChD,6BAASA,UAAU,gBACjB,4BAAQA,UAAU,QAChB,yBACEuB,IAAG,uCAAkCT,EAAQC,KAAKS,cAA/C,QACHC,IAAG,eAAUX,EAAQA,WAEvB,gCAAYd,UAAU,sCACnBc,EAAQA,UAGb,yBAAKd,UAAU,kBAAkB0B,MAAO,CAAEC,OAAQ,QAChD,yBAAK3B,UAAU,yBAAyB4B,KAAK,cAAcF,MAAO,CAAEG,MAAM,GAAD,OAAKb,EAAL,MAAsBc,gBAAed,EAAYe,gBAAc,IAAIC,gBAAc,QAC1J,yBAAKhC,UAAU,4BAA4B4B,KAAK,cAAcF,MAAO,CAAEG,MAAM,GAAD,OAAKV,EAAL,MAAyBW,gBAAeX,EAAeY,gBAAc,IAAIC,gBAAc,QACnK,yBAAKhC,UAAU,wBAAwB4B,KAAK,cAAcF,MAAO,CAAEG,MAAM,GAAD,OAAKT,EAAL,MAAqBU,gBAAeV,EAAWW,gBAAc,IAAIC,gBAAc,SAEzJ,6BAAShC,UAAU,SACjB,qCAEE,0BAAMA,UAAU,eAAeH,EAAGI,OAAOa,EAAQZ,QAChDY,EAAQX,WAAa,GACpB,0BAAMH,UAAU,yBAAhB,KACKH,EAAGI,OAAOa,EAAQX,cAI3B,sCAEE,0BAAMH,UAAU,eAAeH,EAAGI,OAAOa,EAAQV,SAChDU,EAAQT,YAAc,GACrB,0BAAML,UAAU,yBAAhB,KACKH,EAAGI,OAAOa,EAAQT,eAI3B,yCAEE,0BAAML,UAAU,mBACbH,EAAGI,OAAOa,EAAQR,YAEpBQ,EAAQP,eAAiB,GACxB,0BAAMP,UAAU,6BAAhB,KACKH,EAAGI,OAAOa,EAAQP,kBAI3B,4CAEE,0BAAMP,UAAU,gBAAgBH,EAAGI,OAAOa,EAAQN,c,YC9DjD,SAASyB,EAAT,GAAqD,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,mBA2J3C,OAxJAC,qBAAU,WACR,GAAID,EAAoB,CACtB,IAAME,EAAgB,GAChBC,EAAoB,GACpBC,EAAqB,GACrBC,EAAwB,GACxBC,EAAqB,GAE3BC,OAAOC,KAAKT,EAAShC,OAAO0C,SAAQ,SAAAC,GAClCR,EAAcS,KAAKD,GACnBP,EAAkBQ,KAAKZ,EAAShC,MAAM2C,OAGxCH,OAAOC,KAAKT,EAAS9B,QAAQwC,SAAQ,SAAAC,GACnCN,EAAmBO,KAAKZ,EAAS9B,OAAOyC,OAG1CH,OAAOC,KAAKT,EAAS5B,WAAWsC,SAAQ,SAAAC,GACtCL,EAAsBM,KAAKZ,EAAS5B,UAAUuC,OAGhDH,OAAOC,KAAKT,EAAShC,OAAO0C,SAAQ,SAAAC,GAClCJ,EAAmBK,KAAKZ,EAAShC,MAAM2C,IAAQX,EAAS9B,OAAOyC,GAAOX,EAAS5B,UAAUuC,QAG3F,IAAME,EAAMC,SACTC,eAAe,aACfC,WAAW,MACd,IAAIC,EAAMJ,EAAK,CACbK,KAAM,OACNC,QAAS,CACPC,SAAU,CACRC,KAAM,QACNC,WAAW,GAEbC,OAAQ,CACNC,OAAQ,CACNC,UAAW,UAGfC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLH,UAAW,WAIjBI,MAAO,CACL,CACED,MAAO,CACLH,UAAW,aAMrBK,KAAM,CACJN,OAAQrB,EACR4B,SAAU,CACR,CACEC,MAAO,cACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,yBACjBC,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,UACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,EAChBnB,KAAM1B,EAAkB8C,KAAI,SAAAC,GAAI,OAAIA,MAEtC,CACEnB,MAAO,kBACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,yBACjBC,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,UACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,EAChBnB,KAAMxB,EAAsB4C,KAAI,SAAAC,GAAI,OAAIA,MAE1C,CACEnB,MAAO,eACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,wBACjBC,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,UACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,EAChBnB,KAAMzB,EAAmB6C,KAAI,SAAAC,GAAI,OAAIA,MAEvC,CACEnB,MAAO,eACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,UACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,EAChBnB,KAAMvB,EAAmB2C,KAAI,SAAAC,GAAI,OAAIA,aAQ9C,CAAClD,IAGF,oCACE,yDACA,4BACEnC,UAAU,OACV2B,OAAO,QACP2D,GAAI,eChKG,SAASC,EAAT,GAA2C,IAAdC,EAAa,EAAbA,UAAa,EACLC,qBADK,mBAChDC,EADgD,KAC7BC,EAD6B,OAEjBF,oBAAS,GAFQ,mBAEhDG,EAFgD,KAEnCC,EAFmC,KAyGvD,OArGAzD,qBAAU,WAER,QAAqB0D,IAAjBN,EAAU,GAAkB,CAG9B,IAFA,IAAMO,EAAe,GAEZC,EAAQ,EAAGA,EAAQ,EAAGA,IAC7BD,EAAajD,KAAK0C,EAAUQ,GAAV,OAGU,uCAAG,4BAAAC,EAAA,sEACR1G,EAAI2G,KAAK,0BAA2BH,GAD5B,OACzBI,EADyB,OAE/BR,EAAqBQ,EAASnC,MAC9B6B,GAAe,GAHgB,2CAAH,qDAM9BO,MAED,CAACZ,IAGJpD,qBAAU,WACR,GAAIsD,IAAqC,IAAhBE,EAAuB,CAC9C,IAAMvD,EAAgB,GAChBgE,EAAkB,GAClBC,EAAuB,GACvBrC,EAAW,GAEjBvB,OAAOC,KAAK+C,EAAkB,GAAlB,gBAA2C9C,SAAQ,SAAAC,GAC7DR,EAAcS,KAAKD,MAGrB,IAAK,IAAImD,EAAQ,EAAGA,EAAQN,EAAkBa,OAAQP,IAAS,CAC7DM,EAAqBxD,KAAK4C,EAAkBM,GAAlB,SAC1BK,EAAgBvD,KAAK4C,EAAkBM,GAAlB,gBAErB,IAAMQ,EAAY,IAAMvF,KAAKwF,MAAoB,SAAdxF,KAAKyF,UAAmBC,SAAS,IACpE1C,EAASnB,KAAK,CACZoB,MAAOoC,EAAqBN,GACxB7B,MAAM,EACNC,YAAa,GACbE,YAAakC,EACbjC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB6B,EAClB5B,qBAAsB4B,EACtB3B,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2ByB,EAC3BxB,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,EAChBnB,KAAMtB,OAAOkE,OAAOP,EAAgBL,IAAQZ,KAAI,SAAAC,GAAI,OAAIA,OAKhE,IAAMtC,EAAMC,SACTC,eAAe,2BACfC,WAAW,MACd,IAAIC,EAAMJ,EAAK,CACbK,KAAM,OACNC,QAAS,CACPC,SAAU,CACRC,KAAM,QACNC,WAAW,GAEbC,OAAQ,CACNC,OAAQ,CACNC,UAAW,UAGfC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLH,UAAW,WAIjBI,MAAO,CACL,CACED,MAAO,CACLH,UAAW,aAMrBK,KAAM,CACJN,OAAQrB,EACR4B,SAAUA,QAMf,CAACyB,EAAmBE,IAGrB,oCACE,mEACA,4BACE5F,UAAU,OACV2B,OAAO,QACP2D,GAAI,6BChHG,SAASuB,EAAT,GAAqE,IAAjD7C,EAAgD,EAAhDA,KAAM7B,EAA0C,EAA1CA,mBAA0C,IAAtBrB,eAAsB,MAAZ,SAAY,EAyCjF,OAvCAsB,qBAAU,WACR,GAAID,EAAoB,CACtB,IAAMY,EAAMC,SAASC,eAAT,aAAqCC,WAAW,MAC5D,IAAIC,EAAMJ,EAAK,CACbK,KAAM,MACNC,QAAS,CACPI,OAAQ,CACNC,OAAQ,CACNC,UAAW,WAIjBK,KAAM,CACJN,OAAQ,CACN,SACA,YACA,SAEFO,SAAU,CACR,CACEI,gBAAiB,CACf,UACA,UACA,WAEFL,KAAM,CACJA,EAAKxD,OACLwD,EAAK1D,UACL0D,EAAK5D,gBAShB,CAAC+B,IAGF,oCACE,4BAAKrB,EAAL,iCACA,4BAAQd,UAAU,OAAOsF,GAAG,e,MC/BnB,SAASwB,IAAQ,IAAD,EACKrB,mBAAS,IADd,mBACtBD,EADsB,KACXuB,EADW,OAEOtB,mBAAS,IAFhB,mBAEtBuB,EAFsB,KAEVC,EAFU,OAGWxB,oBAAS,GAHpB,mBAGtByB,EAHsB,KAGRC,EAHQ,OAIuB1B,mBAAS,GAJhC,mBAItB2B,EAJsB,KAIFC,EAJE,OAKiB5B,mBAAS,GAL1B,mBAKtB6B,EALsB,KAKLC,EALK,OAMe9B,qBANf,mBAMtB+B,EANsB,KAMNC,EANM,OAOShC,oBAAS,GAPlB,mBAOtBG,EAPsB,KAOTC,EAPS,OAQKJ,oBAAS,GARd,mBAQtBiC,EARsB,KAQXC,EARW,KAwD7B,OA7CAvF,qBAAU,WACR,IAAMwF,EAAe,uCAAG,4BAAA3B,EAAA,sEACC1G,EAAIsI,IAAJ,cADD,QAChB1B,EADgB,QAGbnC,KAAOtB,OAAOkE,OAAOT,EAASnC,MAEvC+C,EAAaZ,EAASnC,MACtB6B,GAAe,GANO,2CAAH,qDASfiC,EAAc,uCAAG,4BAAA7B,EAAA,sEACE1G,EAAIsI,IAAJ,WADF,OACf1B,EADe,OAErBc,EAAcd,EAASnC,MACvB6B,GAAe,GACf8B,GAAa,GAJQ,2CAAH,qDAMpBC,IACAE,MAEC,CAACR,IAEJlF,qBAAU,WACR,IAAI2F,EAAW,KAWf,OAVIb,IACFa,EAAWC,aAAY,WACrBX,GAAsB,SAAAD,GAAkB,OAAIA,EAAqB,KAC7DA,EAAqB,KAAO,GAA4B,IAAvBA,IACnCG,GAAmB,SAAAD,GAAe,OAAIA,EAAkB,KACxDD,EAAsB,MAEvB,MAGE,kBAAMY,cAAcF,MAC1B,CAACb,EAAcE,IAElBhF,qBAAU,WACR7C,EAAIsI,IAAJ,oBAA4BK,MAAK,SAAA/B,GAC/BsB,EAAkBtB,EAASnC,MAC3BmD,GAAgB,GAChBtB,GAAe,QAGhB,KAEqB,IAAjBqB,EACL,yBAAKlH,UAAU,WACb,kBAAC,IAAD,CAASoD,KAAK,OAAO+E,MAAM,UAG3B,yBAAKnI,UAAU,mBACb,kBAAC,wBAAD,MAEA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,6BAASA,UAAU,aACjB,kBAACiC,EAAD,CAAUC,SAAUsF,EAAgBrF,mBAAoByD,MAG5D,yBAAK5F,UAAU,SACb,6BAASA,UAAU,aACjB,kBAACuF,EAAD,CAAmBC,UAAWA,MAGlC,yBAAKxF,UAAU,SACb,6BAASA,UAAU,aACjB,kBAAC6G,EAAD,CAAU7C,KAAMgD,EAAY7E,mBAAoBuF,OAItD,kBAAC,EAAD,CAAY9H,WAAYoH,IAExB,yBAAKhH,UAAU,iCACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,2CAAd,mBAIDwF,EAAUJ,KAAI,SAAAgD,GAAO,OACpB,kBAACvH,EAAD,CAAagC,IAAKuF,EAAQtH,QAASA,QAASsH,S,UCvGlDvI,EAAK,IAAIC,KAAKC,aAEL,SAASsI,EAAT,GAA0C,IAAZvH,EAAW,EAAXA,QAI3C,OAHAA,EAAQC,KAA2B,eAApBD,EAAQA,QAA2B,KAAOA,EAAQC,KACjED,EAAQC,KAA2B,qBAApBD,EAAQA,QAAiC,KAAOA,EAAQC,KAGrE,6BAASf,UAAU,wBACjB,4BAAQA,UAAU,QAChB,yBACEuB,IAAG,uCAAkCT,EAAQC,KAAKS,cAA/C,QACHC,IAAG,eAAUX,EAAQA,WAEvB,oCAAaA,EAAQA,UAEvB,6BAASd,UAAU,SACjB,qCAEE,0BAAMA,UAAU,oCACbH,EAAGI,OAAOa,EAAQZ,QAHvB,kBAME,0BAAMF,UAAU,uCACbH,EAAGI,OAAOa,EAAQX,cAGvB,sCAEE,0BAAMH,UAAU,oCACbH,EAAGI,OAAOa,EAAQV,SAHvB,mBAME,0BAAMJ,UAAU,wCACbH,EAAGI,OAAOa,EAAQT,eAGvB,yCAEE,0BAAML,UAAU,wCACbH,EAAGI,OAAOa,EAAQR,YAHvB,sBAME,0BAAMN,UAAU,6CACbH,EAAGI,OAAOa,EAAQP,kBAGvB,4CAEE,0BAAMP,UAAU,qCACbH,EAAGI,OAAOa,EAAQN,SAHvB,QAME,0BAAMR,UAAU,oCACbH,EAAGI,OAAOa,EAAQL,SAGvB,0CAEE,0BAAMT,UAAU,uCACbH,EAAGI,OAAOa,EAAQwH,aAHvB,WAME,0BAAMtI,UAAU,uCACbH,EAAGI,OAAOa,EAAQH,cC/DhB,SAASkG,EAAT,GAAiD,IAA7B7C,EAA4B,EAA5BA,KAAM7B,EAAsB,EAAtBA,mBAsCvC,OAnCAC,qBAAU,WACR,GAAID,EAAoB,CACtB,IAAMY,EAAMC,SAASC,eAAT,aAAqCC,WAAW,MAC5D,IAAIC,EAAMJ,EAAK,CACbK,KAAM,MACNC,QAAS,CACPI,OAAQ,CACNC,OAAQ,CACNC,UAAW,WAIjBK,KAAM,CACJN,OAAQ,CAAC,GAAD,OAAIM,EAAKlD,QAAT,eAA+B,SACvCmD,SAAU,CACR,CACEI,gBAAiB,CAEf,UACA,WAEFL,KAAM,CAEJA,EAAKsE,WACLtE,EAAKvD,eAShB,CAAC0B,IAGF,oCACE,4BAAK6B,EAAKlD,QAAV,uBACA,4BAAQd,UAAU,OAAOsF,GAAG,e,MChCnB,SAASiD,IAAW,IACXC,EAAgBC,cAA9BC,aADwB,EAEQjD,oBAAS,GAFjB,mBAEzByB,EAFyB,KAEXC,EAFW,OAGwB1B,oBAAS,GAHjC,mBAGzBkD,EAHyB,KAGHC,EAHG,OAIFnD,mBAAS,IAJP,mBAIzB3E,EAJyB,KAIhB+H,EAJgB,OAKcpD,mBAAS,IALvB,mBAKzBqD,EALyB,KAKRC,EALQ,KAgChC,OAxBA3G,qBAAU,YACiB,uCAAG,4BAAA6D,EAAA,sEACH1G,EAAIsI,IAAJ,4BAA6BW,IAD1B,OACpBrC,EADoB,OAE1B4C,EAAmB5C,EAASnC,KAAK9B,UACjC0G,GAAwB,GAHE,2CAAH,qDAMzBI,KAGC,IAGH5G,qBAAU,YACa,uCAAG,4BAAA6D,EAAA,sEACC1G,EAAIsI,IAAJ,mBAAoBW,IADrB,OAChBrC,EADgB,OAEtB0C,EAAW1C,EAASnC,MACpBmD,GAAgB,GAHM,2CAAH,qDAMrBS,KAEC,IAEKV,EAKJ,yBAAKlH,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,CAAac,QAASA,KAExB,yBAAKd,UAAU,SACb,6BAASA,UAAU,cACjB,kBAACiC,EAAD,CAAUC,SAAU4G,EAAiB3G,mBAAoBwG,MAG7D,yBAAK3I,UAAU,SACb,yBAAKA,UAAU,UACb,6BAASA,UAAU,aACjB,kBAAC6G,EAAD,CAAU7C,KAAMlD,EAASqB,mBAAoBwG,EAAsB7H,QAASA,EAAQA,QAASmI,WAAY/B,MAG7G,yBAAKlH,UAAU,UACb,6BAASA,UAAU,aACjB,kBAAC,EAAD,CAAUgE,KAAMlD,EAASqB,mBAAoBwG,SAtBzD,yBAAK3I,UAAU,WACb,kBAAC,IAAD,CAASoD,KAAK,OAAO+E,MAAM,U,2BCvBlBe,EAhBA,kBACb,yBAAK5D,GAAG,eACN,kBAAC,IAAD,CAAMhE,GAAIV,EAAUZ,UAAU,eAC5B,yBAAKuB,IAAK4H,IAAM1H,IAAI,kBAAkBzB,UAAU,SADlD,YAGE,yBAAKA,UAAU,cAEjB,yBAAKA,UAAU,wBACb,kBAAC,IAAD,CAAMsB,GAAIV,EAAUZ,UAAU,kBAA9B,eCNS,SAASoJ,IACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAMzI,EAAU0I,UAAWJ,IAClC,kBAAC,IAAD,CAAOK,OAAK,EAACF,KAAMzI,EAAU0I,UAAWxC,IACxC,kBAAC,IAAD,CAAOyC,OAAK,EAACF,KAAI,UAAKzI,EAAL,iBAA8B0I,UAAWf,K,gBCFjDiB,EANH,kBACV,yBAAKxJ,UAAU,OACb,kBAACoJ,EAAD,QCJJK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF3G,SAASC,eAAe,W","file":"static/js/main.d1a5e48c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fa1e2a0b.png\";","import axios from 'axios';\n\nconst apiRoute =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:3333'\n    : 'https://apicoviddashboard.herokuapp.com';\nconst api = axios.create({ baseURL: apiRoute });\n\nexport default api;\n","import React from 'react';\n\nimport './styles.css';\n\nexport default function GlobalData({ globaldata }) {\n  const nf = new Intl.NumberFormat();\n\n  return (\n    <>\n      <h1 className=\"text-center title-components\">Global Data</h1>\n      <article className=\"global-article\">\n        <section className=\"cases\">\n          <div className=\"global-data-title top-color-1\">\n            Cases\n            <span className=\"global-data-numbers color-cases\">\n              {nf.format(globaldata.cases)}\n            </span>\n            New cases today\n            <span className=\"global-data-numbers color-new-case\">\n              {nf.format(globaldata.todayCases)}\n            </span>\n          </div>\n          <div className=\"global-data-title top-color-2\">\n            Deaths\n            <span className=\"global-data-numbers color-death\">\n              {nf.format(globaldata.deaths)}\n            </span>\n            New deaths today\n            <span className=\"global-data-numbers color-new-death\">\n              {nf.format(globaldata.todayDeaths)}\n            </span>\n          </div>\n          <div className=\"global-data-title top-color-3\">\n            Recovered\n            <span className=\"global-data-numbers color-recovered\">\n              {nf.format(globaldata.recovered)}\n            </span>\n            New recoveries today\n            <span className=\"global-data-numbers color-new-recoveries\">\n              {nf.format(globaldata.todayRecovered)}\n            </span>\n          </div>\n          <div className=\"global-data-title top-color-4\">\n            Active cases\n            <span className=\"global-data-numbers color-active\">\n              {nf.format(globaldata.active)}\n            </span>\n            Tests\n            <span className=\"global-data-numbers color-tests\">\n              {nf.format(globaldata.tests)}\n            </span>\n          </div>\n          <div className=\"global-data-title top-color-5\">\n            Countries affected\n            <span className=\"global-data-numbers color-affected\">\n              {nf.format(globaldata.affectedCountries)}\n            </span>\n            Criticals cases\n            <span className=\"global-data-numbers color-critical\">\n              {nf.format(globaldata.critical)}\n            </span>\n          </div>\n        </section>\n        {/* <section>\n                    <button className='btn btn-info' onClick={this.createNotification('info')}>Info</button>\n                    <hr />\n                    <button className='btn btn-success' onClick={this.createNotification('success')}>Success</button>\n                    <hr />\n                    <button className='btn btn-warning' onClick={this.createNotification('warning')}>Warning</button>\n                    <hr />\n                    <button className='btn btn-danger' onClick={this.createNotification('error')}>Error</button>\n                </section> */}\n      </article>\n    </>\n  );\n}\n","const rootpath =\n  process.env.NODE_ENV === 'development' ? '/' : '/Coronavirus-Dashboard/';\nexport default rootpath;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\nimport rootpath from '../../services/getRootPath';\n\nconst nf = new Intl.NumberFormat();\n\nexport default function CountryCard({ country }) {\n  country.iso2 = country.country === 'MS Zaandam' ? 'US' : country.iso2;\n  country.iso2 = country.country === 'Diamond Princess' ? 'US' : country.iso2;\n\n  const active_pct = Math.round((country.active * 100) / country.cases)\n  const recovered_pct = Math.round((country.recovered * 100) / country.cases)\n  const death_pct = Math.ceil((country.deaths * 100) / country.cases)\n\n  return (\n    <div className=\"col-xl-3 col-lg-4\">\n      <Link to={`${rootpath}${country.iso2}`} className=\"unstyled-link\">\n        <article className=\"pais-article\">\n          <figure className=\"flag\">\n            <img\n              src={`https://cdn.u21.io/flags/4x3/${country.iso2.toLowerCase()}.svg`}\n              alt={`flag ${country.country}`}\n            />\n            <figcaption className=\"text-bold font-smaller text-center\">\n              {country.country}\n            </figcaption>\n          </figure>\n          <div className=\"progress shadow\" style={{ height: \"7px\" }}>\n            <div className=\"progress-bar bg-active\" role=\"progressbar\" style={{ width: `${active_pct}%` }} aria-valuenow={active_pct} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n            <div className=\"progress-bar bg-recovered\" role=\"progressbar\" style={{ width: `${recovered_pct}%` }} aria-valuenow={recovered_pct} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n            <div className=\"progress-bar bg-death\" role=\"progressbar\" style={{ width: `${death_pct}%` }} aria-valuenow={death_pct} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n          </div>\n          <section className=\"cases\">\n            <div>\n              Cases\n              <span className=\"color-cases\">{nf.format(country.cases)}</span>\n              {country.todayCases > 0 && (\n                <span className=\"color-cases new-today\">\n                  + {nf.format(country.todayCases)}\n                </span>\n              )}\n            </div>\n            <div>\n              Deaths\n              <span className=\"color-death\">{nf.format(country.deaths)}</span>\n              {country.todayDeaths > 0 && (\n                <span className=\"color-death new-today\">\n                  + {nf.format(country.todayDeaths)}\n                </span>\n              )}\n            </div>\n            <div>\n              Recovered\n              <span className=\"color-recovered\">\n                {nf.format(country.recovered)}\n              </span>\n              {country.todayRecovered > 0 && (\n                <span className=\"color-recovered new-today\">\n                  + {nf.format(country.todayRecovered)}\n                </span>\n              )}\n            </div>\n            <div>\n              Active Cases\n              <span className=\"color-active\">{nf.format(country.active)}</span>\n            </div>\n          </section>\n        </article>\n      </Link>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport * as Chart from 'chart.js';\n\nexport default function TimeLine({ timeline, timelineDataLoaded }) {\n\n  // Mount graph cases\n  useEffect(() => {\n    if (timelineDataLoaded) {\n      const timelinedates = [];\n      const timelinedataCases = [];\n      const timelinedataDeaths = [];\n      const timelinedataRecovered = [];\n      const timelinedataActive = [];\n\n      Object.keys(timeline.cases).forEach(key => {\n        timelinedates.push(key);\n        timelinedataCases.push(timeline.cases[key]);\n      });\n\n      Object.keys(timeline.deaths).forEach(key => {\n        timelinedataDeaths.push(timeline.deaths[key]);\n      });\n\n      Object.keys(timeline.recovered).forEach(key => {\n        timelinedataRecovered.push(timeline.recovered[key]);\n      });\n      \n      Object.keys(timeline.cases).forEach(key => {\n        timelinedataActive.push(timeline.cases[key] - (timeline.deaths[key] + timeline.recovered[key]));\n      });\n\n      const cav = document\n        .getElementById('cav_cases')\n        .getContext('2d');\n      new Chart(cav, {\n        type: 'line',\n        options: {\n          tooltips: {\n            mode: 'index',\n            intersect: false,\n          },\n          legend: {\n            labels: {\n              fontColor: 'white',\n            },\n          },\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  fontColor: 'white',\n                },\n              },\n            ],\n            xAxes: [\n              {\n                ticks: {\n                  fontColor: 'white',\n                },\n              },\n            ],\n          },\n        },\n        data: {\n          labels: timelinedates,\n          datasets: [\n            {\n              label: 'Total Cases',\n              fill: false,\n              lineTension: 0.1,\n              backgroundColor: 'rgba(14, 233, 203,0.4)',\n              borderColor: '#0ee9cb',\n              borderCapStyle: 'butt',\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: 'miter',\n              pointBorderColor: '#0ee9cb',\n              pointBackgroundColor: '#0ee9cb',\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: '#0ee9cb',\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\n              pointHoverBorderWidth: 2,\n              pointRadius: 2,\n              pointHitRadius: 2,\n              data: timelinedataCases.map(item => item),\n            },\n            {\n              label: 'Total Recovered',\n              fill: false,\n              lineTension: 0.1,\n              backgroundColor: 'rgba(52, 127, 213,0.4)',\n              borderColor: '#347fd5',\n              borderCapStyle: 'butt',\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: 'miter',\n              pointBorderColor: '#347fd5',\n              pointBackgroundColor: '#347fd5',\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: '#347fd5',\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\n              pointHoverBorderWidth: 2,\n              pointRadius: 2,\n              pointHitRadius: 2,\n              data: timelinedataRecovered.map(item => item),\n            },\n            {\n              label: 'Total Deaths',\n              fill: false,\n              lineTension: 0.1,\n              backgroundColor: 'rgba(243, 83, 83,0.4)',\n              borderColor: '#f35353',\n              borderCapStyle: 'butt',\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: 'miter',\n              pointBorderColor: '#f35353',\n              pointBackgroundColor: '#f35353',\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: '#f35353',\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\n              pointHoverBorderWidth: 2,\n              pointRadius: 2,\n              pointHitRadius: 2,\n              data: timelinedataDeaths.map(item => item),\n            },\n            {\n              label: 'Active cases',\n              fill: false,\n              lineTension: 0.1,\n              backgroundColor: 'rgba(255,193,55,0.4)',\n              borderColor: '#ffc137',\n              borderCapStyle: 'butt',\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: 'miter',\n              pointBorderColor: '#ffc137',\n              pointBackgroundColor: '#ffc137',\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: '#ffc137',\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\n              pointHoverBorderWidth: 2,\n              pointRadius: 2,\n              pointHitRadius: 2,\n              data: timelinedataActive.map(item => item),\n            },\n          ],\n        },\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timelineDataLoaded]);\n\n  return (\n    <>\n      <h2>Timeline cases and deaths</h2>\n      <canvas\n        className=\"mt-4\"\n        height=\"164px\"\n        id={'cav_cases'}\n      />\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport * as Chart from 'chart.js';\nimport api from '../../services/api';\n\nexport default function TimeLineCountries({ countries }) {\n  const [timelineCountries, setTimelineCountries] = useState();\n  const [chartLoaded, setChartLoaded] = useState(false);\n\n  useEffect(() => {\n    // console.log(countries)\n    if (countries[0] !== undefined) {\n      const countriesIso = []\n\n      for (let index = 0; index < 5; index++) {\n        countriesIso.push(countries[index]['iso2'])\n      }\n\n      const loadTopCountriesTimeLine = async () => {\n        const response = await api.post('/top_countries_timeline', countriesIso);\n        setTimelineCountries(response.data);\n        setChartLoaded(true)\n      };\n\n      loadTopCountriesTimeLine();\n    }\n  }, [countries])\n\n  // Mount graph cases\n  useEffect(() => {\n    if (timelineCountries && chartLoaded === false) {\n      const timelinedates = [];\n      const timelineCountry = [];\n      const timelineCountryNames = [];\n      const datasets = [];\n      \n      Object.keys(timelineCountries[0]['timeline']['cases']).forEach(key => {\n        timelinedates.push(key);\n      });\n\n      for (let index = 0; index < timelineCountries.length; index++) {\n        timelineCountryNames.push(timelineCountries[index]['country']);\n        timelineCountry.push(timelineCountries[index]['timeline']['cases']);\n\n        const randColor = '#' + Math.floor(Math.random()*16777215).toString(16);\n        datasets.push({\n          label: timelineCountryNames[index],\n              fill: false,\n              lineTension: 0.1,\n              borderColor: randColor,\n              borderCapStyle: 'butt',\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: 'miter',\n              pointBorderColor: randColor,\n              pointBackgroundColor: randColor,\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: randColor,\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\n              pointHoverBorderWidth: 2,\n              pointRadius: 2,\n              pointHitRadius: 2,\n              data: Object.values(timelineCountry[index]).map(item => item),\n        })\n\n      }\n\n      const cav = document\n        .getElementById('cav_cases_top_countries')\n        .getContext('2d');\n      new Chart(cav, {\n        type: 'line',\n        options: {\n          tooltips: {\n            mode: 'index',\n            intersect: false,\n          },\n          legend: {\n            labels: {\n              fontColor: 'white',\n            },\n          },\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  fontColor: 'white',\n                },\n              },\n            ],\n            xAxes: [\n              {\n                ticks: {\n                  fontColor: 'white',\n                },\n              },\n            ],\n          },\n        },\n        data: {\n          labels: timelinedates,\n          datasets: datasets,\n        },\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timelineCountries, chartLoaded]);\n\n  return (\n    <>\n      <h2>Timeline cases from top 5 countries</h2>\n      <canvas\n        className=\"mt-4\"\n        height=\"164px\"\n        id={'cav_cases_top_countries'}\n      />\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport * as Chart from 'chart.js';\n\nexport default function PieCases({ data, timelineDataLoaded, country = 'Global' }) {\n  // Mount pie cases\n  useEffect(() => {\n    if (timelineDataLoaded) {\n      const cav = document.getElementById(`pie_cases`).getContext('2d');\n      new Chart(cav, {\n        type: 'pie',\n        options: {\n          legend: {\n            labels: {\n              fontColor: 'white',\n            },\n          },\n        },\n        data: {\n          labels: [\n            'Active',\n            'Recovered',\n            'Death',\n          ],\n          datasets: [\n            {\n              backgroundColor: [\n                '#ffc137',\n                '#347fd5',\n                '#f35353',\n              ],\n              data: [\n                data.active,\n                data.recovered,\n                data.deaths,\n              ],\n            },\n          ],\n        },\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timelineDataLoaded]);\n\n  return (\n    <>\n      <h2>{country} active, deaths and recovered</h2>\n      <canvas className=\"mt-4\" id=\"pie_cases\" />\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { NotificationContainer } from 'react-notifications';\n// NotificationManager\nimport 'react-notifications/lib/notifications.css';\nimport Loading from 'react-loading';\n\nimport api from '../../services/api';\n\nimport GlobalCard from '../../components/GlobalCard';\nimport CountryCard from '../../components/CountryCard';\nimport TimeLine from '../../components/TimeLine';\nimport TimeLineCountries from '../../components/TimeLineCountries';\nimport PieCases from '../../components/PieActiveDeathRecovered';\n\nimport './style.css';\n\nexport default function Main() {\n  const [countries, setCountries] = useState([]);\n  const [globalData, setGlobalData] = useState([]);\n  const [isPageLoaded, setIsPageLoaded] = useState(false);\n  const [lastUpdatedSeconds, setLastUpdatedSeconds] = useState(0);\n  const [updatePageCount, setUpdatePageCount] = useState(0);\n  const [timelineGlobal, setTimelineGlobal] = useState();\n  const [chartLoaded, setChartLoaded] = useState(false);\n  const [pieLoaded, setPieLoaded] = useState(false);\n\n  // Get Country Data\n  useEffect(() => {\n    const loadCountryData = async () => {\n      const response = await api.get(`/countries`);\n\n      response.data = Object.values(response.data);\n\n      setCountries(response.data);\n      setChartLoaded(false);\n    };\n\n    const loadGlobalData = async () => {\n      const response = await api.get(`/global`);\n      setGlobalData(response.data);\n      setChartLoaded(false);\n      setPieLoaded(true);\n    };\n    loadCountryData();\n    loadGlobalData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [updatePageCount]);\n\n  useEffect(() => {\n    let interval = null;\n    if (isPageLoaded) {\n      interval = setInterval(() => {\n        setLastUpdatedSeconds(lastUpdatedSeconds => lastUpdatedSeconds + 1);\n        if (lastUpdatedSeconds % 10 === 0 && lastUpdatedSeconds !== 0) {\n          setUpdatePageCount(updatePageCount => updatePageCount + 1);\n          setLastUpdatedSeconds(0);\n        }\n      }, 1000);\n    }\n\n    return () => clearInterval(interval);\n  }, [isPageLoaded, lastUpdatedSeconds]);\n\n  useEffect(() => {\n    api.get(`/global_timeline`).then(response => {\n      setTimelineGlobal(response.data);\n      setIsPageLoaded(true);\n      setChartLoaded(true);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return isPageLoaded === false ? (\n    <div className=\"loading\">\n      <Loading type=\"bars\" color=\"#eee\" />\n    </div>\n  ) : (\n      <div className=\"container-fluid\">\n        <NotificationContainer />\n\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <section className=\"chart-div\">\n              <TimeLine timeline={timelineGlobal} timelineDataLoaded={chartLoaded} />\n            </section>\n          </div>\n          <div className=\"col-6\">\n            <section className=\"chart-div\">\n              <TimeLineCountries countries={countries} />\n            </section>\n          </div>\n          <div className=\"col-4\">\n            <section className=\"chart-div\">\n              <PieCases data={globalData} timelineDataLoaded={pieLoaded} />\n            </section>\n          </div>\n        </div>\n        <GlobalCard globaldata={globalData} />\n\n        <div className=\"row justify-content-md-center\">\n          <div className=\"col-12\">\n            <h1 className=\"text-center text-white title-components\">\n              Countries Data\n          </h1>\n          </div>\n          {countries.map(dataMap => (\n            <CountryCard key={dataMap.country} country={dataMap} />\n          ))}\n        </div>\n      </div>\n    );\n}\n","import React from 'react';\nimport './styles.css';\n\nconst nf = new Intl.NumberFormat();\n\nexport default function CountryDetailsCard({ country }) {\n  country.iso2 = country.country === 'MS Zaandam' ? 'US' : country.iso2;\n  country.iso2 = country.country === 'Diamond Princess' ? 'US' : country.iso2;\n\n  return (\n    <article className=\"pais-details-article\">\n      <figure className=\"flag\">\n        <img\n          src={`https://cdn.u21.io/flags/4x3/${country.iso2.toLowerCase()}.svg`}\n          alt={`flag ${country.country}`}\n        />\n        <figcaption>{country.country}</figcaption>\n      </figure>\n      <section className=\"cases\">\n        <div>\n          Cases\n          <span className=\"country-data-numbers color-cases\">\n            {nf.format(country.cases)}\n          </span>\n          New Cases Today\n          <span className=\"country-data-numbers color-new-case\">\n            {nf.format(country.todayCases)}\n          </span>\n        </div>\n        <div>\n          Deaths\n          <span className=\"country-data-numbers color-death\">\n            {nf.format(country.deaths)}\n          </span>\n          New Deaths Today\n          <span className=\"country-data-numbers color-new-death\">\n            {nf.format(country.todayDeaths)}\n          </span>\n        </div>\n        <div>\n          Recovered\n          <span className=\"country-data-numbers color-recovered\">\n            {nf.format(country.recovered)}\n          </span>\n          New Recovered Today\n          <span className=\"country-data-numbers color-new-recoveries\">\n            {nf.format(country.todayRecovered)}\n          </span>\n        </div>\n        <div>\n          Active Cases\n          <span className=\"country-data-numbers color-active\">\n            {nf.format(country.active)}\n          </span>\n          Tests\n          <span className=\"country-data-numbers color-tests\">\n            {nf.format(country.tests)}\n          </span>\n        </div>\n        <div>\n          Population\n          <span className=\"country-data-numbers color-affected\">\n            {nf.format(country.population)}\n          </span>\n          Critical\n          <span className=\"country-data-numbers color-critical\">\n            {nf.format(country.critical)}\n          </span>\n        </div>\n      </section>\n    </article>\n  );\n}\n","import React, { useEffect } from 'react';\nimport * as Chart from 'chart.js';\n\nexport default function PieCases({ data, timelineDataLoaded }) {\n\n  // Mount pie tests\n  useEffect(() => {\n    if (timelineDataLoaded) {\n      const cav = document.getElementById(`pie_tests`).getContext('2d');\n      new Chart(cav, {\n        type: 'pie',\n        options: {\n          legend: {\n            labels: {\n              fontColor: 'white',\n            },\n          },\n        },\n        data: {\n          labels: [`${data.country} population`, 'Tests'],\n          datasets: [\n            {\n              backgroundColor: [\n                // \"#3e95cd\",\n                '#da8213',\n                '#6bfb31',\n              ],\n              data: [\n                // globalData.population,\n                data.population,\n                data.tests,\n              ],\n            },\n          ],\n        },\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timelineDataLoaded]);\n\n  return (\n    <>\n      <h2>{data.country} Population / Tests</h2>\n      <canvas className=\"mt-4\" id=\"pie_tests\" />\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loading from 'react-loading';\nimport api from '../../services/api';\n\nimport CountryData from '../../components/CountryDetailsCard';\nimport TimeLine from '../../components/TimeLine';\nimport PieCases from '../../components/PieActiveDeathRecovered';\nimport PieTests from '../../components/PieTests';\n\nimport './style.css';\n\nexport default function Country() {\n  const { country_code: countryCode } = useParams();\n  const [isPageLoaded, setIsPageLoaded] = useState(false);\n  const [isTimeLineDataLoaded, setIsTimeLineDataLoaded] = useState(false);\n  const [country, setCountry] = useState([]);\n  const [countryTimeline, setCountryTimeline] = useState([]);\n\n  // Get Country Timeline\n  useEffect(() => {\n    const loadCountryTimeLine = async () => {\n      const response = await api.get(`/country_timeline/${countryCode}`);\n      setCountryTimeline(response.data.timeline);\n      setIsTimeLineDataLoaded(true);\n    };\n\n    loadCountryTimeLine();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Get Country Data\n  useEffect(() => {\n    const loadCountryData = async () => {\n      const response = await api.get(`/country/${countryCode}`);\n      setCountry(response.data);\n      setIsPageLoaded(true);\n    };\n\n    loadCountryData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return !isPageLoaded ? (\n    <div className=\"loading\">\n      <Loading type=\"bars\" color=\"#eee\" />\n    </div>\n  ) : (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <CountryData country={country} />\n          </div>\n          <div className=\"col-8\">\n            <section className=\" chart-div\">\n              <TimeLine timeline={countryTimeline} timelineDataLoaded={isTimeLineDataLoaded} />\n            </section>\n          </div>\n          <div className=\"col-4\">\n            <div className=\"col-12\">\n              <section className=\"chart-div\">\n                <PieCases data={country} timelineDataLoaded={isTimeLineDataLoaded} country={country.country} pageLoaded={isPageLoaded} />\n              </section>\n            </div>\n            <div className=\"col-12\">\n              <section className=\"chart-div\">\n                <PieTests data={country} timelineDataLoaded={isTimeLineDataLoaded} />\n              </section>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css';\nimport rootpath from '../../services/getRootPath';\n\nimport logo from '../../assets/logo.png';\n\nconst Header = () => (\n  <div id=\"main-header\">\n    <Link to={rootpath} className=\"title-brand\">\n      <img src={logo} alt=\"Covid Dashboard\" className=\"logo\" />\n      DASHBOARD\n      <div className=\"blob red\" />\n    </Link>\n    <nav className=\"my-2 my-md-0 mr-md-3\">\n      <Link to={rootpath} className=\"p-2 text-white\">\n        Features\n      </Link>\n    </nav>\n    {/* <a class=\"btn btn-outline-primary\" href=\"#\">Sign up</a> */}\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Main from './pages/Main';\nimport Country from './pages/Country';\nimport Header from './components/Header';\n\nimport rootpath from './services/getRootPath';\n\nexport default function Routes() {\n  return (\n    <BrowserRouter>\n      <Route path={rootpath} component={Header} />\n      <Route exact path={rootpath} component={Main} />\n      <Route exact path={`${rootpath}:country_code`} component={Country} />\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport Routes from './routes';\n\nimport './styles.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <Routes />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}