{"version":3,"sources":["assets/logo.png","services/api.js","GlobalStyles.js","components/GlobalCard/styles.js","components/GlobalCard/index.jsx","components/CountryCard/styles.js","services/getRootPath.js","components/CountryCard/index.jsx","components/TimeLine/index.jsx","components/TimeLineCountries/index.jsx","components/RecentChanges/styles.js","components/RecentChanges/index.jsx","components/PieActiveDeathRecovered/index.jsx","pages/Main/styles.jsx","pages/Main/index.jsx","components/CountryDetailsCard/styles.js","components/CountryDetailsCard/index.jsx","components/TimeLineDaily/index.jsx","components/PieTests/index.jsx","pages/Country/styles.jsx","pages/Country/index.jsx","components/Header/styles.js","components/Header/index.jsx","routes.jsx","App.jsx","index.jsx"],"names":["module","exports","api","axios","create","baseURL","colors","createGlobalStyle","topBorderColors","GlobalCardStyles","styled","div","styles","keyClass","css","createTopBorders","GlobalData","globaldata","nf","Intl","NumberFormat","className","format","cases","todayCases","deaths","todayDeaths","recovered","todayRecovered","CountryCardStyles","rootpath","CountryCard","country","iso2","activePct","Math","round","active","recoveredPct","deathPct","ceil","to","src","toLowerCase","alt","style","height","role","width","aria-valuenow","aria-valuemin","aria-valuemax","TimeLine","timeline","timelineDataLoaded","Chart","LineWithLine","line","extend","draw","ease","this","chart","tooltip","_active","length","activePoint","ctx","x","tooltipPosition","topY","scales","top","bottomY","bottom","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","prototype","call","useEffect","timelinedates","timelinedataCases","timelinedataDeaths","timelinedataRecovered","timelinedataActive","Object","keys","forEach","key","push","cav","document","getElementById","getContext","type","options","tooltips","mode","intersect","legend","labels","fontColor","yAxes","ticks","xAxes","data","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","map","item","id","TimeLineCountries","countries","useState","timelineCountries","setTimelineCountries","chartLoaded","setChartLoaded","undefined","countriesIso","index","a","post","response","loadTopCountriesTimeLine","timelineCountry","timelineCountryNames","randColor","floor","random","toString","values","RecentStyle","RecentChange","stateAtual","stateNovo","textReturn","setTextReturn","textToState","countriesAtual","countriesNovo","comparer","otherArray","current","filter","other","onlyInA","onlyInB","result","concat","constructor","Array","sort","b","text","Date","now","toLocaleString","parsedText","textState","compareObjects","change","PieCases","ChartsStyle","GlobalDataHeader","main","Main","setCountries","globalData","setGlobalData","isPageLoaded","setIsPageLoaded","globalDataLoaded","setGlobalDataLoaded","lastUpdatedSeconds","setLastUpdatedSeconds","updatePageCount","setUpdatePageCount","timelineGlobal","setTimelineGlobal","pieLoaded","setPieLoaded","oldCountries","useRef","Promise","all","get","responseCountries","responseGlobal","ContriesObject","updated","loadData","interval","setInterval","clearInterval","prevCountries","then","color","dataMap","CountryDetailsCardStyles","article","CountryDetailsCard","tests","population","critical","CountryStyles","Country","countryCode","useParams","country_code","isTimeLineDataLoaded","setIsTimeLineDataLoaded","isTimeLineNewDataLoaded","setIsTimeLineNewDataLoaded","setCountry","countryTimeline","setCountryTimeline","countryTimelineNew","setCountryTimelineNew","loadCountryTimeLine","loadCountryTimeLineNew","loadCountryData","pageLoaded","HeaderStyles","header","Header","logo","Routes","path","component","exact","App","GlobalStyles","ReactDOM","render","StrictMode"],"mappings":"wHAAAA,EAAOC,QAAU,IAA0B,kC,4NCQ5BC,E,OAFHC,EAAMC,OAAO,CAAEC,QADrB,4C,2lDCHC,IAAMC,EACC,UADDA,EAKD,UALCA,EAOE,UAPFA,EASD,OATCA,EAWC,UAXDA,EAaC,UAbDA,EAeK,UAfLA,EAiBE,UAjBFA,EAmBI,UAnBJA,EAqBK,UArBLA,EAuBS,UAvBTA,EAyBC,UAzBDA,EA2BI,UA3BJA,EA6BI,UAGFC,cAAf,IAYkBD,EACLA,EAKAA,EASKA,EACLA,EAcKA,EAOLA,EAIAA,EAIAA,EAIAA,EAIAA,EAIAA,EAIAA,EAIAA,EAIAA,EAIAA,EAIWA,EAIAA,EAIAA,G,8tCC9HxB,IAAME,EAAkB,CACtB,cAAeF,EACf,cAAeA,EACf,cAAeA,EACf,cAAeA,EACf,cAAeA,GAiBjB,IAkDeG,EAlDUC,IAAOC,IAAV,IAwBML,EAtC5B,WACE,IAAIM,EAAS,GACb,IAAK,IAAMC,KAAYL,EACrBI,GAAM,oBACAC,EADA,8CAEuBL,EAAgBK,GAFvC,oBAMR,OAAOC,YAAP,IACIF,GA8BIG,GAEYT,GCnDP,SAASU,EAAT,GAAqC,IAAfC,EAAc,EAAdA,WAC7BC,EAAK,IAAIC,KAAKC,aAEpB,OACE,kBAAC,EAAD,KACE,wBAAIC,UAAU,oBAAd,eACA,6BAASA,UAAU,kBACjB,6BAASA,UAAU,SACjB,yBAAKA,UAAU,iCAAf,QAEE,0BAAMA,UAAU,mCACbH,EAAGI,OAAOL,EAAWM,QAH1B,kBAME,0BAAMF,UAAU,sCACbH,EAAGI,OAAOL,EAAWO,cAG1B,yBAAKH,UAAU,iCAAf,SAEE,0BAAMA,UAAU,mCACbH,EAAGI,OAAOL,EAAWQ,SAH1B,mBAME,0BAAMJ,UAAU,uCACbH,EAAGI,OAAOL,EAAWS,eAG1B,yBAAKL,UAAU,iCAAf,YAEE,0BAAMA,UAAU,uCACbH,EAAGI,OAAOL,EAAWU,YAH1B,uBAME,0BAAMN,UAAU,4CACbH,EAAGI,OAAOL,EAAWW,qB,6sCCpCpC,IAyDeC,EAzDWnB,IAAOC,IAAV,IAULL,EAEMA,EAOEA,GCpBXwB,EADkC,0BCI3CZ,EAAK,IAAIC,KAAKC,aAEL,SAASW,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACpCA,EAAQC,KAA2B,eAApBD,EAAQA,QAA2B,KAAOA,EAAQC,KACjED,EAAQC,KAA2B,qBAApBD,EAAQA,QAAiC,KAAOA,EAAQC,KAEvE,IAAMC,EAAYC,KAAKC,MAAwB,IAAjBJ,EAAQK,OAAgBL,EAAQT,OACxDe,EAAeH,KAAKC,MAA2B,IAApBJ,EAAQL,UAAmBK,EAAQT,OAC9DgB,EAAWJ,KAAKK,KAAuB,IAAjBR,EAAQP,OAAgBO,EAAQT,OAE5D,OACE,kBAAC,EAAD,CAAmBF,UAAU,qBAC3B,kBAAC,IAAD,CAAMoB,GAAE,UAAKX,GAAL,OAAgBE,EAAQC,MAAQZ,UAAU,iBAChD,iCACE,gCACE,yBACEqB,IAAG,uCAAkCV,EAAQC,KAAKU,cAA/C,QACHC,IAAG,eAAUZ,EAAQA,WAEvB,gCAAYX,UAAU,sCACnBW,EAAQA,UAGb,yBAAKX,UAAU,kBAAkBwB,MAAO,CAAEC,OAAQ,QAChD,yBACEzB,UAAU,yBACV0B,KAAK,cACLF,MAAO,CAAEG,MAAM,GAAD,OAAKd,EAAL,MACde,gBAAef,EACfgB,gBAAc,IACdC,gBAAc,QAEhB,yBACE9B,UAAU,4BACV0B,KAAK,cACLF,MAAO,CAAEG,MAAM,GAAD,OAAKV,EAAL,MACdW,gBAAeX,EACfY,gBAAc,IACdC,gBAAc,QAEhB,yBACE9B,UAAU,wBACV0B,KAAK,cACLF,MAAO,CAAEG,MAAM,GAAD,OAAKT,EAAL,MACdU,gBAAeV,EACfW,gBAAc,IACdC,gBAAc,SAGlB,iCACE,qCAEE,0BAAM9B,UAAU,eAAeH,EAAGI,OAAOU,EAAQT,QAChDS,EAAQR,WAAa,GACpB,0BAAMH,UAAU,yBAAhB,KACKH,EAAGI,OAAOU,EAAQR,cAI3B,sCAEE,0BAAMH,UAAU,eAAeH,EAAGI,OAAOU,EAAQP,SAChDO,EAAQN,YAAc,GACrB,0BAAML,UAAU,yBAAhB,KACKH,EAAGI,OAAOU,EAAQN,eAI3B,yCAEE,0BAAML,UAAU,mBACbH,EAAGI,OAAOU,EAAQL,YAEpBK,EAAQJ,eAAiB,GACxB,0BAAMP,UAAU,6BAAhB,KACKH,EAAGI,OAAOU,EAAQJ,kBAI3B,4CAEE,0BAAMP,UAAU,gBAAgBH,EAAGI,OAAOU,EAAQK,c,WCnFjD,SAASe,EAAT,GAAqD,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,mBAmM3C,OAnLAC,WAAeC,aAAeD,WAAeE,KAC7CF,cAAkBC,aAAeD,cAAkBE,KAAKC,OAAO,CAC7DC,KAD6D,SACxDC,GACH,GAAIC,KAAKC,MAAMC,QAAQC,SAAWH,KAAKC,MAAMC,QAAQC,QAAQC,OAAQ,CACnE,IAAMC,EAAcL,KAAKC,MAAMC,QAAQC,QAAQ,GACvCG,EAAQN,KAAKC,MAAbK,IACAC,EAAMF,EAAYG,kBAAlBD,EACFE,EAAOT,KAAKC,MAAMS,OAAO,YAAYC,IACrCC,EAAUZ,KAAKC,MAAMS,OAAO,YAAYG,OAG9CP,EAAIQ,OACJR,EAAIS,YACJT,EAAIU,OAAOT,EAAGE,GACdH,EAAIW,OAAOV,EAAGK,GACdN,EAAIY,UAAY,EAChBZ,EAAIa,YAAc,UAElBb,EAAIc,SACJd,EAAIe,UAEN3B,cAAkBE,KAAK0B,UAAUxB,KAAKyB,KAAKvB,KAAMD,MAKrDyB,qBAAU,WACR,GAAI/B,EAAoB,CACtB,IAAMgC,EAAgB,GAChBC,EAAoB,GACpBC,EAAqB,GACrBC,EAAwB,GACxBC,EAAqB,GAE3BC,OAAOC,KAAKvC,EAAS9B,OAAOsE,SAAQ,SAAAC,GAClCR,EAAcS,KAAKD,GACnBP,EAAkBQ,KAAK1C,EAAS9B,MAAMuE,OAGxCH,OAAOC,KAAKvC,EAAS5B,QAAQoE,SAAQ,SAAAC,GACnCN,EAAmBO,KAAK1C,EAAS5B,OAAOqE,OAG1CH,OAAOC,KAAKvC,EAAS1B,WAAWkE,SAAQ,SAAAC,GACtCL,EAAsBM,KAAK1C,EAAS1B,UAAUmE,OAGhDH,OAAOC,KAAKvC,EAAS9B,OAAOsE,SAAQ,SAAAC,GAClCJ,EAAmBK,KACjB1C,EAAS9B,MAAMuE,IACZzC,EAAS5B,OAAOqE,GAAOzC,EAAS1B,UAAUmE,QAIjD,IAAME,EAAMC,SAASC,eAAe,aAAaC,WAAW,MAC5D,IAAI5C,EAAMyC,EAAK,CACbI,KAAM,eACNC,QAAS,CACPC,SAAU,CACRC,KAAM,QACNC,WAAW,GAEbC,OAAQ,CACNC,OAAQ,CACNC,UAAW,UAGfpC,OAAQ,CACNqC,MAAO,CACL,CACEC,MAAO,CACLF,UAAW,WAIjBG,MAAO,CACL,CACED,MAAO,CACLF,UAAW,aAMrBI,KAAM,CACJL,OAAQpB,EACR0B,SAAU,CACR,CACEC,MAAO,cACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,yBACjBC,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,UACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,EAChBnB,KAAMxB,EAAkB4C,KAAI,SAAAC,GAAI,OAAIA,MAEtC,CACEnB,MAAO,kBACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,yBACjBC,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,UACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,EAChBnB,KAAMtB,EAAsB0C,KAAI,SAAAC,GAAI,OAAIA,MAE1C,CACEnB,MAAO,eACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,wBACjBC,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,UACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,EAChBnB,KAAMvB,EAAmB2C,KAAI,SAAAC,GAAI,OAAIA,MAEvC,CACEnB,MAAO,eACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,UACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,EAChBnB,KAAMrB,EAAmByC,KAAI,SAAAC,GAAI,OAAIA,aAQ9C,CAAC9E,IAGF,oCACE,yDACA,4BAAQjC,UAAU,OAAOyB,OAAO,SAASuF,GAAG,eCrMnC,SAASC,EAAT,GAA2C,IAAdC,EAAa,EAAbA,UAAa,EACLC,qBADK,mBAChDC,EADgD,KAC7BC,EAD6B,OAEjBF,oBAAS,GAFQ,mBAEhDG,EAFgD,KAEnCC,EAFmC,KAgHvD,OA5GAvD,qBAAU,WAER,QAAqBwD,IAAjBN,EAAU,KAAoC,IAAhBI,EAAuB,CAGvD,IAFA,IAAMG,EAAe,GAEZC,EAAQ,EAAGA,EAAQ,EAAGA,IAC7BD,EAAa/C,KAAKwC,EAAUQ,GAAO9G,OAGP,uCAAG,4BAAA+G,EAAA,sEACR9I,EAAI+I,KACzB,0BACAH,GAH6B,OACzBI,EADyB,OAK/BR,EAAqBQ,EAASnC,MAC9B6B,GAAe,GANgB,2CAAH,qDAS9BO,MAED,CAACZ,EAAWI,IAGftD,qBAAU,WACR,GAAIoD,IAAqC,IAAhBE,EAAuB,CAC9C,IAAMrD,EAAgB,GAChB8D,EAAkB,GAClBC,EAAuB,GACvBrC,EAAW,GAEjBrB,OAAOC,KAAK6C,EAAkB,GAAGpF,SAAS9B,OAAOsE,SAAQ,SAAAC,GACvDR,EAAcS,KAAKD,MAGrB,IAAK,IAAIiD,EAAQ,EAAGA,EAAQN,EAAkBxE,OAAQ8E,IAAS,CAC7DM,EAAqBtD,KAAK0C,EAAkBM,GAAO/G,SACnDoH,EAAgBrD,KAAK0C,EAAkBM,GAAO1F,SAAS9B,OAEvD,IAAI+H,EAAS,WAAOnH,KAAKoH,MAAsB,SAAhBpH,KAAKqH,UAAqBC,SAAS,KAEzC,IAArBH,EAAUrF,SACZqF,GAAa,KAGftC,EAASjB,KAAK,CACZkB,MAAOoC,EAAqBN,GAC5B7B,MAAM,EACNC,YAAa,GACbE,YAAaiC,EACbhC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB4B,EAClB3B,qBAAsB2B,EACtB1B,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2BwB,EAC3BvB,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,EAChBnB,KAAMpB,OAAO+D,OAAON,EAAgBL,IAAQZ,KAAI,SAAAC,GAAI,OAAIA,OAI5D,IAAMpC,EAAMC,SACTC,eAAe,2BACfC,WAAW,MACd,IAAI5C,EAAMyC,EAAK,CACbI,KAAM,eACNC,QAAS,CACPC,SAAU,CACRC,KAAM,QACNC,WAAW,GAEbC,OAAQ,CACNC,OAAQ,CACNC,UAAW,UAGfpC,OAAQ,CACNqC,MAAO,CACL,CACEC,MAAO,CACLF,UAAW,WAIjBG,MAAO,CACL,CACED,MAAO,CACLF,UAAW,aAMrBI,KAAM,CACJL,OAAQpB,EACR0B,iBAML,CAACyB,EAAmBE,IAGrB,oCACE,mEACA,4BAAQtH,UAAU,OAAOyB,OAAO,SAASuF,GAAG,6B,miBCpHlD,IA6BesB,EA7BKjJ,IAAOC,IAAV,IAQDL,GCPD,SAASsJ,EAAT,GAAkD,IAA1BC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,UAAa,EAC1BtB,mBAAS,IADiB,mBACvDuB,EADuD,KAC3CC,EAD2C,KAExDC,EAAc,GA8GpB,OAzGA5E,qBAAU,WAKR,QAAmBwD,IAAfgB,EAA0B,EACL,WACrB,IAAMK,EAAiBL,EACjBM,EAAgBL,EAEtB,SAASM,EAASC,GAChB,OAAO,SAAAC,GACL,OAOgB,IANdD,EAAWE,QAAO,SAAAC,GAChB,OACEA,EAAMjJ,QAAU+I,EAAQ/I,OACxBiJ,EAAM7I,YAAc2I,EAAQ3I,WAC5B6I,EAAM/I,SAAW6I,EAAQ7I,UAE1BwC,QAKT,IAAMwG,EAAUP,EAAeK,OAAOH,EAASD,IACzCO,EAAUP,EAAcI,OAAOH,EAASF,IAE1CS,EAASF,EAAQG,OAAOF,GAG5B,GAAmC,IAA/B/E,OAAOC,KAAK+E,GAAQ1G,QAAgB0G,EAAOE,cAAgBC,MAAO,CAWpEH,EAASA,EAAOI,MAVA,SAAC/B,EAAGgC,GAClB,OAAIhC,EAAE/G,KAAO+I,EAAE/I,MACL,EAEN+G,EAAE/G,KAAO+I,EAAE/I,KACN,EAEF,KAKT,IAAK,IAAI8G,EAAQ,EAAGA,EAAQ4B,EAAO1G,OAAQ8E,IACrC4B,EAAO5B,GAAO9G,OAAS0I,EAAO5B,EAAQ,GAAG9G,OACvC0I,EAAO5B,GAAOxH,MAAQoJ,EAAO5B,EAAQ,GAAGxH,QAC1C0I,EAAYlB,GAAS,CACnBkC,KAAK,GAAD,OAAKN,EAAO5B,GAAO/G,QAAnB,cACF2I,EAAO5B,GAAOxH,MAAQoJ,EAAO5B,EAAQ,GAAGxH,MADtC,WAGJU,KAAM0I,EAAO5B,GAAO9G,OAIpB0I,EAAO5B,GAAOpH,UAAYgJ,EAAO5B,EAAQ,GAAGpH,iBACnBkH,IAAvBoB,EAAYlB,GACdkB,EAAYlB,GAAS,CACnBkC,KAAK,GAAD,OAAKN,EAAO5B,GAAO/G,QAAnB,cACF2I,EAAO5B,GAAOpH,UAAYgJ,EAAO5B,EAAQ,GAAGpH,UAD1C,eAGJM,KAAM0I,EAAO5B,GAAO9G,MAGtBgI,EAAYlB,GAAOkC,KAAnB,UAA6BhB,EAAYlB,GAAOkC,KAAhD,YACEN,EAAO5B,GAAOpH,UAAYgJ,EAAO5B,EAAQ,GAAGpH,UAD9C,gBAMAgJ,EAAO5B,GAAOtH,OAASkJ,EAAO5B,EAAQ,GAAGtH,cAChBoH,IAAvBoB,EAAYlB,GACdkB,EAAYlB,GAAS,CACnBkC,KAAK,GAAD,OAAKN,EAAO5B,GAAO/G,QAAnB,cACF2I,EAAO5B,GAAOtH,OAASkJ,EAAO5B,EAAQ,GAAGtH,OADvC,YAGJQ,KAAM0I,EAAO5B,GAAO9G,MAGtBgI,EAAYlB,GAAOkC,KAAnB,UAA6BhB,EAAYlB,GAAOkC,KAAhD,YACEN,EAAO5B,GAAOtH,OAASkJ,EAAO5B,EAAQ,GAAGtH,OAD3C,kBAMuBoH,IAAvBoB,EAAYlB,KACdkB,EAAYlB,GAAOkC,KAAnB,UACEhB,EAAYlB,GAAOkC,KADrB,aAEK,IAAIC,KAAKA,KAAKC,OAAOC,iBAF1B,OAON,IAAMC,EAAapB,EAAYM,QAC7B,SAAAe,GAAS,YAAkBzC,IAAdyC,KAGftB,EAAc,GAAD,mBAAKqB,GAAL,YAAoBtB,MAGrCwB,MAID,CAAC1B,EAAYC,IAGd,kBAAC,EAAD,KACE,8CAEA,yBAAKzI,UAAU,kBACZ0I,EAAW5B,KAAI,SAAAqD,GAAM,OACpB,yBAAK1F,IAAK0F,EAAOP,KAAOO,EAAOvJ,MAC7B,gCACE,yBACES,IAAG,uCAAkC8I,EAAOvJ,KAAKU,cAA9C,QACHC,IAAG,eAAU4I,EAAOP,QAEtB,gCAAY5J,UAAU,0BACpB,2BAAImK,EAAOP,cC9HZ,SAASQ,EAAT,GAIX,IAHF1E,EAGC,EAHDA,KACAzD,EAEC,EAFDA,mBAEC,IADDtB,eACC,MADS,SACT,EA6BD,OA3BAqD,qBAAU,WACR,GAAI/B,EAAoB,CACtB,IAAM0C,EAAMC,SAASC,eAAT,aAAqCC,WAAW,MAC5D,IAAI5C,EAAMyC,EAAK,CACbI,KAAM,MACNC,QAAS,CACPI,OAAQ,CACNC,OAAQ,CACNC,UAAW,WAIjBI,KAAM,CACJL,OAAQ,CAAC,SAAU,YAAa,SAChCM,SAAU,CACR,CACEI,gBAAiB,CAAC,UAAW,UAAW,WACxCL,KAAM,CAACA,EAAK1E,OAAQ0E,EAAKpF,UAAWoF,EAAKtF,gBAQlD,CAAC6B,IAGF,oCACE,4BAAKtB,EAAL,iCACA,4BAAQX,UAAU,OAAOyB,OAAO,SAASuF,GAAG,e,k/BCpC3C,IAAMqD,GAAchL,IAAOC,IAAV,MAiBXgL,GAAmBjL,IAAOkL,KAAV,KAsBPtL,GCzBP,SAASuL,KAAQ,IAAD,EACKrD,mBAAS,IADd,mBACtBD,EADsB,KACXuD,EADW,OAGOtD,mBAAS,IAHhB,mBAGtBuD,EAHsB,KAGVC,EAHU,OAIWxD,oBAAS,GAJpB,mBAItByD,EAJsB,KAIRC,EAJQ,OAKmB1D,oBAAS,GAL5B,mBAKtB2D,EALsB,KAKJC,EALI,OAMuB5D,mBAAS,GANhC,mBAMtB6D,EANsB,KAMFC,EANE,OAOiB9D,mBAAS,GAP1B,mBAOtB+D,EAPsB,KAOLC,EAPK,OAQehE,qBARf,mBAQtBiE,EARsB,KAQNC,EARM,OASKlE,oBAAS,GATd,mBAStBmE,EATsB,KASXC,EATW,KAWvBC,EAAeC,mBAGrBzH,qBAAU,WAAM,4CACd,oCAAA2D,EAAA,sEACoD+D,QAAQC,IAAI,CAC5D9M,EAAI+M,IAAJ,cACA/M,EAAI+M,IAAJ,aAHJ,mCACSC,EADT,KAC4BC,EAD5B,KAMQC,EAAiBzH,OAAO+D,OAAOwD,EAAkBnG,WAClC8B,IAAjBN,EAAU,IACZ5C,OAAOC,KAAKwH,GAAgBvH,SAAQ,SAAAC,GAC9BsH,EAAetH,GAAKuH,QAAU9E,EAAUzC,GAAKuH,UAC/CD,EAAetH,GAAOyC,EAAUzC,OAKtCgG,EAAasB,GACbpB,EAAcmB,EAAepG,MAC7B6F,GAAa,GACbV,GAAgB,GAlBlB,6CADc,uBAAC,WAAD,wBAqBdoB,KAEC,CAACf,IAEJlH,qBAAU,WACR,IAAIkI,EAAW,KAaf,OAZItB,IACFsB,EAAWC,aAAY,WACrBlB,GAAsB,SAAAD,GAAkB,OAAIA,EAAqB,KAC7DA,EAAqB,KAAO,GAA4B,IAAvBA,IAEnCQ,EAAavC,QAAU/B,EACvBiE,GAAmB,SAAAD,GAAe,OAAIA,EAAkB,KACxDD,EAAsB,MAEvB,MAGE,kBAAMmB,cAAcF,MAC1B,CAACtB,EAAcI,EAAoB9D,IAEtC,IAAMmF,EAAgBb,EAAavC,QAWnC,OATAjF,qBAAU,WACRnF,EAAI+M,IAAJ,oBAA4BU,MAAK,SAAAzE,GAC/BwD,EAAkBxD,EAASnC,MAC3BqF,GAAoB,QAIrB,KAEqB,IAAjBH,EACL,yBAAK5K,UAAU,WACb,kBAAC,IAAD,CAAS+E,KAAK,OAAOwH,MAAM,UAG7B,yBAAKvM,UAAU,wBACb,kBAAC,wBAAD,MAEA,kBAACqK,GAAD,KACE,6BAASrK,UAAU,aACjB,kBAAC+B,EAAD,CACEC,SAAUoJ,EACVnJ,mBAAoB6I,KAGxB,6BAAS9K,UAAU,aACjB,kBAACiH,EAAD,CAAmBC,UAAWA,KAGhC,6BAASlH,UAAU,aACjB,kBAACoK,EAAD,CAAU1E,KAAMgF,EAAYzI,mBAAoBqJ,KAElD,6BAAStL,UAAU,aAEjB,kBAACuI,EAAD,CAAcC,WAAY6D,EAAe5D,UAAWvB,MAIxD,kBAACoD,GAAD,KACE,6BAAStK,UAAU,eACjB,kBAAC,EAAD,CAAYJ,WAAY8K,KAE1B,6BAAS1K,UAAU,kBACjB,wBAAIA,UAAU,2BAAd,kBACA,yBAAKA,UAAU,mBACZkH,EAAUJ,KAAI,SAAA0F,GAAO,OACpB,kBAAC9L,EAAD,CAAa+D,IAAK+H,EAAQ7L,QAASA,QAAS6L,W,8jCCrH1D,IAmDeC,GAnDkBpN,IAAOqN,QAAV,KA2BVzN,EAKEA,GChChBY,GAAK,IAAIC,KAAKC,aAEL,SAAS4M,GAAT,GAA0C,IAAZhM,EAAW,EAAXA,QAI3C,OAHAA,EAAQC,KAA2B,eAApBD,EAAQA,QAA2B,KAAOA,EAAQC,KACjED,EAAQC,KAA2B,qBAApBD,EAAQA,QAAiC,KAAOA,EAAQC,KAGrE,kBAAC,GAAD,KACE,4BAAQZ,UAAU,QAChB,yBACEqB,IAAG,uCAAkCV,EAAQC,KAAKU,cAA/C,QACHC,IAAG,eAAUZ,EAAQA,WAEvB,oCAAaA,EAAQA,UAEvB,6BAASX,UAAU,SACjB,qCAEE,0BAAMA,UAAU,oCACbH,GAAGI,OAAOU,EAAQT,QAHvB,kBAME,0BAAMF,UAAU,uCACbH,GAAGI,OAAOU,EAAQR,cAGvB,sCAEE,0BAAMH,UAAU,oCACbH,GAAGI,OAAOU,EAAQP,SAHvB,mBAME,0BAAMJ,UAAU,wCACbH,GAAGI,OAAOU,EAAQN,eAGvB,yCAEE,0BAAML,UAAU,wCACbH,GAAGI,OAAOU,EAAQL,YAHvB,sBAME,0BAAMN,UAAU,6CACbH,GAAGI,OAAOU,EAAQJ,kBAGvB,4CAEE,0BAAMP,UAAU,qCACbH,GAAGI,OAAOU,EAAQK,SAHvB,QAME,0BAAMhB,UAAU,oCACbH,GAAGI,OAAOU,EAAQiM,SAGvB,0CAEE,0BAAM5M,UAAU,uCACbH,GAAGI,OAAOU,EAAQkM,aAHvB,WAME,0BAAM7M,UAAU,uCACbH,GAAGI,OAAOU,EAAQmM,cC/DhB,SAAS/K,GAAT,GAAqD,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,mBA8I3C,OA9HAC,WAAeC,aAAeD,WAAeE,KAC7CF,cAAkBC,aAAeD,cAAkBE,KAAKC,OAAO,CAC7DC,KAD6D,SACxDC,GACH,GAAIC,KAAKC,MAAMC,QAAQC,SAAWH,KAAKC,MAAMC,QAAQC,QAAQC,OAAQ,CACnE,IAAMC,EAAcL,KAAKC,MAAMC,QAAQC,QAAQ,GACvCG,EAAQN,KAAKC,MAAbK,IACAC,EAAMF,EAAYG,kBAAlBD,EACFE,EAAOT,KAAKC,MAAMS,OAAO,YAAYC,IACrCC,EAAUZ,KAAKC,MAAMS,OAAO,YAAYG,OAG9CP,EAAIQ,OACJR,EAAIS,YACJT,EAAIU,OAAOT,EAAGE,GACdH,EAAIW,OAAOV,EAAGK,GACdN,EAAIY,UAAY,EAChBZ,EAAIa,YAAc,UAElBb,EAAIc,SACJd,EAAIe,UAEN3B,cAAkBE,KAAK0B,UAAUxB,KAAKyB,KAAKvB,KAAMD,MAKrDyB,qBAAU,WACR,GAAI/B,EAAoB,CACtB,IAAMgC,EAAgB,GAChBC,EAAoB,GACpBC,EAAqB,GAI3BG,OAAOC,KAAKvC,EAAS9B,OAAOsE,SAAQ,SAAAC,GAClCR,EAAcS,KAAKD,GACnBP,EAAkBQ,KAAK1C,EAAS9B,MAAMuE,OAGxCH,OAAOC,KAAKvC,EAAS5B,QAAQoE,SAAQ,SAAAC,GACnCN,EAAmBO,KAAK1C,EAAS5B,OAAOqE,OAG1C,IAAME,EAAMC,SAASC,eAAe,mBAAmBC,WAAW,MAClE,IAAI5C,EAAMyC,EAAK,CACbI,KAAM,eACNC,QAAS,CACPC,SAAU,CACRC,KAAM,QACNC,WAAW,GAEbC,OAAQ,CACNC,OAAQ,CACNC,UAAW,UAGfpC,OAAQ,CACNqC,MAAO,CACL,CACEC,MAAO,CACLF,UAAW,WAIjBG,MAAO,CACL,CACED,MAAO,CACLF,UAAW,aAMrBI,KAAM,CACJL,OAAQpB,EACR0B,SAAU,CACR,CACEC,MAAO,cACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,yBACjBC,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,UACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,EAChBnB,KAAMxB,EAAkB4C,KAAI,SAAAC,GAAI,OAAIA,MAEtC,CACEnB,MAAO,eACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,wBACjBC,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,UACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,EAChBnB,KAAMvB,EAAmB2C,KAAI,SAAAC,GAAI,OAAIA,aAQ9C,CAAC9E,IAGF,oCACE,+DACA,4BAAQjC,UAAU,OAAOyB,OAAO,SAASuF,GAAG,qBCjJnC,SAASoD,GAAT,GAAiD,IAA7B1E,EAA4B,EAA5BA,KAAMzD,EAAsB,EAAtBA,mBAqCvC,OAnCA+B,qBAAU,WACR,GAAI/B,EAAoB,CACtB,IAAM0C,EAAMC,SAASC,eAAT,aAAqCC,WAAW,MAC5D,IAAI5C,EAAMyC,EAAK,CACbI,KAAM,MACNC,QAAS,CACPI,OAAQ,CACNC,OAAQ,CACNC,UAAW,WAIjBI,KAAM,CACJL,OAAQ,CAAC,GAAD,OAAIK,EAAK/E,QAAT,eAA+B,SACvCgF,SAAU,CACR,CACEI,gBAAiB,CAEf,UACA,WAEFL,KAAM,CAEJA,EAAKmH,WACLnH,EAAKkH,eAShB,CAAC3K,IAGF,oCACE,4BAAKyD,EAAK/E,QAAV,uBACA,4BAAQX,UAAU,OAAOyB,OAAO,SAASuF,GAAG,e,mICzClD,IAMe+F,GANO1N,IAAOC,IAAV,MCWJ,SAAS0N,KAAW,IACXC,EAAgBC,cAA9BC,aADwB,EAEQhG,oBAAS,GAFjB,mBAEzByD,EAFyB,KAEXC,EAFW,OAGwB1D,oBAAS,GAHjC,mBAGzBiG,EAHyB,KAGHC,EAHG,OAI8BlG,oBAAS,GAJvC,mBAIzBmG,EAJyB,KAIAC,EAJA,OAKFpG,mBAAS,IALP,mBAKzBxG,EALyB,KAKhB6M,EALgB,OAMcrG,mBAAS,IANvB,mBAMzBsG,EANyB,KAMRC,EANQ,OAOoBvG,mBAAS,IAP7B,mBAOzBwG,EAPyB,KAOLC,EAPK,KAgDhC,OAtCA5J,qBAAU,YACiB,uCAAG,4BAAA2D,EAAA,sEACH9I,EAAI+M,IAAJ,4BAA6BqB,IAD1B,OACpBpF,EADoB,OAE1B6F,EAAmB7F,EAASnC,KAAK1D,UACjCqL,GAAwB,GAHE,2CAAH,qDAMzBQ,KAGC,IAGH7J,qBAAU,YACoB,uCAAG,4BAAA2D,EAAA,sEACN9I,EAAI+M,IAAJ,gCAAiCqB,IAD3B,OACvBpF,EADuB,OAE7B+F,EAAsB/F,EAASnC,KAAK1D,UAEpCuL,GAA2B,GAJE,2CAAH,qDAO5BO,KAGC,IAGH9J,qBAAU,YACa,uCAAG,4BAAA2D,EAAA,sEACC9I,EAAI+M,IAAJ,mBAAoBqB,IADrB,OAChBpF,EADgB,OAEtB2F,EAAW3F,EAASnC,MACpBmF,GAAgB,GAHM,2CAAH,qDAMrBkD,KAEC,IAEKnD,EAKN,kBAAC,GAAD,CAAe5K,UAAU,mBACvB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,kBAAC,GAAD,CAAaW,QAASA,KAExB,yBAAKX,UAAU,sBACb,6BAASA,UAAU,cACjB,kBAAC+B,EAAD,CACEC,SAAUyL,EACVxL,mBAAoBmL,MAI1B,yBAAKpN,UAAU,sBACb,6BAASA,UAAU,cACjB,kBAAC,GAAD,CACEgC,SAAU2L,EACV1L,mBAAoBqL,MAI1B,yBAAKtN,UAAU,sBACb,6BAASA,UAAU,aACjB,kBAACoK,EAAD,CACE1E,KAAM/E,EACNsB,mBAAoBmL,EACpBzM,QAASA,EAAQA,QACjBqN,WAAYpD,MAIlB,yBAAK5K,UAAU,sBACb,6BAASA,UAAU,aACjB,kBAAC,GAAD,CACE0F,KAAM/E,EACNsB,mBAAoBmL,QAvC9B,yBAAKpN,UAAU,WACb,kBAAC,IAAD,CAAS+E,KAAK,OAAOwH,MAAM,U,uvJC5DjC,IA0Ne0B,GA1NM5O,IAAO6O,OAAV,KAIFjP,EAGLA,G,oBCaIkP,GAhBA,kBACb,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAM/M,GAAIX,EAAUT,UAAU,eAC5B,yBAAKqB,IAAK+M,KAAM7M,IAAI,kBAAkBvB,UAAU,SADlD,YAGE,yBAAKA,UAAU,cAEjB,yBAAKA,UAAU,wBACb,kBAAC,IAAD,CAAMoB,GAAIX,EAAUT,UAAU,kBAA9B,eCNS,SAASqO,KACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAM7N,EAAU8N,UAAWJ,KAClC,kBAAC,IAAD,CAAOK,OAAK,EAACF,KAAM7N,EAAU8N,UAAW/D,KACxC,kBAAC,IAAD,CAAOgE,OAAK,EAACF,KAAI,UAAK7N,EAAL,iBAA8B8N,UAAWvB,M,gBCGjDyB,GATH,kBACV,yBAAKzO,UAAU,OACb,kBAAC,IAAD,KACE,kBAACqO,GAAD,OAEF,kBAACK,EAAD,QCTJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFjK,SAASC,eAAe,W","file":"static/js/main.76c332f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fa1e2a0b.png\";","import axios from 'axios';\n\nconst apiRoute =\n  process.env.NODE_ENV === 'development'\n    ? 'http://localhost:3333'\n    : 'https://apicoviddashboard.herokuapp.com';\nconst api = axios.create({ baseURL: apiRoute });\n\nexport default api;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const colors = {\n  background: '#161e2c',\n\n  bgHeader: '#222c45',\n\n  bgActive: '#29344a',\n\n  hoverBorder: '#6bfb31',\n\n  mainText: '#eee',\n\n  colorCases: '#0ee9cb',\n\n  colorDeath: '#f35353',\n\n  colorRecovered: '#347fd5',\n\n  colorActive: '#ffc137',\n\n  colorNewCases: '#ff8a37',\n\n  colorNewDeaths: '#af1c1c',\n\n  colorNewRecoveries: '#2a8e3c',\n\n  colorTests: '#6bfb31',\n\n  colorCritical: '#dc3b1f',\n\n  colorAffected: '#da8213',\n};\n\nexport default createGlobalStyle`\n *{\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    -webkit-font-smoothing: antialiased;\n    font-family: 'Open Sans', -apple-system, Helvetica, sans-serif !important;\n    font-weight: 600;\n    background: ${colors.background} !important;\n    color: ${colors.mainText} !important;\n    overflow-x: hidden !important;\n  }\n\n  a {\n    color: ${colors.mainText} !important;\n    text-decoration: none !important;\n  }\n\n  .loading {\n    height: calc(100vh - 59px);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: ${colors.background} !important;\n    color: ${colors.mainText} !important;\n  }\n\n  .notification {\n    box-shadow: none !important;\n  }\n\n  .title-components {\n    text-align: center;\n    font-weight: 800 !important;\n    font-size: 55px;\n  }\n\n  .chart-div {\n    background: ${colors.bgActive};\n    border-radius: 5px;\n    padding: 20px;\n    margin-bottom: 20px;\n  }\n\n  .color-cases {\n    color: ${colors.colorCases};\n  }\n\n  .color-death {\n    color: ${colors.colorDeath};\n  }\n\n  .color-recovered {\n    color: ${colors.colorRecovered};\n  }\n\n  .color-active {\n    color: ${colors.colorActive};\n  }\n\n  .color-new-case {\n    color: ${colors.colorNewCases};\n  }\n\n  .color-new-death {\n    color: ${colors.colorNewDeaths};\n  }\n\n  .color-new-recoveries {\n    color: ${colors.colorNewRecoveries};\n  }\n\n  .color-tests {\n    color: ${colors.colorTests};\n  }\n\n  .color-critical {\n    color: ${colors.colorCritical};\n  }\n\n  .color-affected {\n    color: ${colors.colorAffected};\n  }\n\n  .bg-active {\n    background-color: ${colors.colorActive} !important;\n  }\n\n  .bg-recovered {\n    background-color: ${colors.colorRecovered} !important;\n  }\n\n  .bg-death {\n    background-color: ${colors.colorDeath} !important;\n  }\n`;\n","/* eslint-disable no-restricted-syntax */\n/* eslint-disable guard-for-in */\nimport styled, { css } from 'styled-components';\nimport { colors } from '../../GlobalStyles';\n\nconst topBorderColors = {\n  'top-color-1': colors.colorNewCases,\n  'top-color-2': colors.colorNewDeaths,\n  'top-color-3': colors.colorNewRecoveries,\n  'top-color-4': colors.colorTests,\n  'top-color-5': colors.colorCritical,\n};\n\nfunction createTopBorders() {\n  let styles = '';\n  for (const keyClass in topBorderColors) {\n    styles += `\n      &.${keyClass} {\n        border-top: 1rem solid ${topBorderColors[keyClass]};\n      }\n    `;\n  }\n  return css`\n    ${styles}\n  `;\n}\n\nconst GlobalCardStyles = styled.div`\n  .global-article {\n    border-radius: 0.5rem;\n    width: 100%;\n    font-weight: 800;\n\n    .cases {\n      display: flex;\n      flex-wrap: wrap;\n      @media all and (max-width: 499px) {\n        flex-direction: column;\n      }\n      div {\n        flex: 1 1 auto;\n        display: flex;\n        flex-direction: column;\n        text-align: center;\n      }\n\n      .global-data-title {\n        margin: 1rem;\n        @media all and (max-width: 499px) {\n          margin: 0.5rem 0.3rem;\n        }\n        border: 3px solid ${colors.bgActive};\n\n        ${createTopBorders()}\n\n        background: ${colors.bgActive};\n        border-radius: 0.5rem;\n        font-size: 1.5rem;\n        @media all and (max-width: 499px) {\n          font-size: 1rem;\n        }\n        &:hover {\n          filter: brightness(1.2);\n          transition: all 0.2s;\n        }\n        box-shadow: 0.2rem 1rem 0.65rem rgba(0, 0, 0, 0.342);\n      }\n      .global-data-numbers {\n        font-size: 3rem;\n        @media all and (max-width: 499px) {\n          font-size: 1.7rem;\n        }\n        font-weight: 800;\n      }\n    }\n  }\n`;\nexport default GlobalCardStyles;\n","import React from 'react';\n\nimport GlobalCardStyles from './styles';\n\nexport default function GlobalData({ globaldata }) {\n  const nf = new Intl.NumberFormat();\n\n  return (\n    <GlobalCardStyles>\n      <h1 className=\"title-components\">Global Data</h1>\n      <article className=\"global-article\">\n        <section className=\"cases\">\n          <div className=\"global-data-title top-color-1\">\n            Cases\n            <span className=\"global-data-numbers color-cases\">\n              {nf.format(globaldata.cases)}\n            </span>\n            New cases today\n            <span className=\"global-data-numbers color-new-case\">\n              {nf.format(globaldata.todayCases)}\n            </span>\n          </div>\n          <div className=\"global-data-title top-color-2\">\n            Deaths\n            <span className=\"global-data-numbers color-death\">\n              {nf.format(globaldata.deaths)}\n            </span>\n            New deaths today\n            <span className=\"global-data-numbers color-new-death\">\n              {nf.format(globaldata.todayDeaths)}\n            </span>\n          </div>\n          <div className=\"global-data-title top-color-3\">\n            Recovered\n            <span className=\"global-data-numbers color-recovered\">\n              {nf.format(globaldata.recovered)}\n            </span>\n            New recoveries today\n            <span className=\"global-data-numbers color-new-recoveries\">\n              {nf.format(globaldata.todayRecovered)}\n            </span>\n          </div>\n          {/* <div className=\"global-data-title top-color-4\">\n            Active cases\n            <span className=\"global-data-numbers color-active\">\n              {nf.format(globaldata.active)}\n            </span>\n            Tests\n            <span className=\"global-data-numbers color-tests\">\n              {nf.format(globaldata.tests)}\n            </span>\n          </div>\n          <div className=\"global-data-title top-color-5\">\n            Countries affected\n            <span className=\"global-data-numbers color-affected\">\n              {nf.format(globaldata.affectedCountries)}\n            </span>\n            Criticals cases\n            <span className=\"global-data-numbers color-critical\">\n              {nf.format(globaldata.critical)}\n            </span>\n          </div> */}\n        </section>\n        {/* <section>\n                    <button className='btn btn-info' onClick={this.createNotification('info')}>Info</button>\n                    <hr />\n                    <button className='btn btn-success' onClick={this.createNotification('success')}>Success</button>\n                    <hr />\n                    <button className='btn btn-warning' onClick={this.createNotification('warning')}>Warning</button>\n                    <hr />\n                    <button className='btn btn-danger' onClick={this.createNotification('error')}>Error</button>\n                </section> */}\n      </article>\n    </GlobalCardStyles>\n  );\n}\n","import styled from 'styled-components';\nimport { colors } from '../../GlobalStyles';\n\nconst CountryCardStyles = styled.div`\n  @media all and (max-width: 499px) {\n    padding: 0;\n  }\n  article {\n    margin: 20px auto 10px;\n    padding: 20px;\n\n    font-size: 18px;\n    font-weight: 800;\n    background: ${colors.bgActive};\n    border-radius: 0.5rem;\n    border: 3px solid ${colors.bgActive};\n    box-shadow: 0.2rem 1rem 0.65rem rgba(0, 0, 0, 0.342);\n\n    transition: all ease-in 0.11s, transform ease-in-out 0.09s;\n    &:hover {\n      filter: brightness(1.2);\n      transform: translateY(-10px);\n      border: 3px solid ${colors.hoverBorder};\n    }\n    figure {\n      display: grid;\n      grid-template-columns: 1fr 5fr;\n      align-items: center;\n\n      margin-right: 55px;\n      font-size: x-large;\n\n      img {\n        height: 48px;\n        border-radius: 20%;\n        box-shadow: 0.31rem 0.29rem 0.65rem rgba(0, 0, 0, 0.342);\n      }\n    }\n\n    section {\n      display: flex;\n      flex-wrap: wrap;\n\n      margin-top: 8px;\n      min-height: 67px;\n\n      div {\n        align-items: center;\n        flex: 1 1 auto;\n        display: flex;\n        flex-direction: column;\n\n        .new-today {\n          margin-top: -5px;\n          font-size: 12px;\n        }\n      }\n    }\n  }\n`;\nexport default CountryCardStyles;\n","const rootpath =\n  process.env.NODE_ENV === 'development' ? '/' : '/Coronavirus-Dashboard/';\nexport default rootpath;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport CountryCardStyles from './styles';\nimport rootpath from '../../services/getRootPath';\n\nconst nf = new Intl.NumberFormat();\n\nexport default function CountryCard({ country }) {\n  country.iso2 = country.country === 'MS Zaandam' ? 'US' : country.iso2;\n  country.iso2 = country.country === 'Diamond Princess' ? 'US' : country.iso2;\n\n  const activePct = Math.round((country.active * 100) / country.cases);\n  const recoveredPct = Math.round((country.recovered * 100) / country.cases);\n  const deathPct = Math.ceil((country.deaths * 100) / country.cases);\n\n  return (\n    <CountryCardStyles className=\"col-lg-4 col-md-6\">\n      <Link to={`${rootpath}${country.iso2}`} className=\"unstyled-link\">\n        <article>\n          <figure>\n            <img\n              src={`https://cdn.u21.io/flags/4x3/${country.iso2.toLowerCase()}.svg`}\n              alt={`flag ${country.country}`}\n            />\n            <figcaption className=\"text-bold font-smaller text-center\">\n              {country.country}\n            </figcaption>\n          </figure>\n          <div className=\"progress shadow\" style={{ height: '7px' }}>\n            <div\n              className=\"progress-bar bg-active\"\n              role=\"progressbar\"\n              style={{ width: `${activePct}%` }}\n              aria-valuenow={activePct}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            />\n            <div\n              className=\"progress-bar bg-recovered\"\n              role=\"progressbar\"\n              style={{ width: `${recoveredPct}%` }}\n              aria-valuenow={recoveredPct}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            />\n            <div\n              className=\"progress-bar bg-death\"\n              role=\"progressbar\"\n              style={{ width: `${deathPct}%` }}\n              aria-valuenow={deathPct}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            />\n          </div>\n          <section>\n            <div>\n              Cases\n              <span className=\"color-cases\">{nf.format(country.cases)}</span>\n              {country.todayCases > 0 && (\n                <span className=\"color-cases new-today\">\n                  + {nf.format(country.todayCases)}\n                </span>\n              )}\n            </div>\n            <div>\n              Deaths\n              <span className=\"color-death\">{nf.format(country.deaths)}</span>\n              {country.todayDeaths > 0 && (\n                <span className=\"color-death new-today\">\n                  + {nf.format(country.todayDeaths)}\n                </span>\n              )}\n            </div>\n            <div>\n              Recovered\n              <span className=\"color-recovered\">\n                {nf.format(country.recovered)}\n              </span>\n              {country.todayRecovered > 0 && (\n                <span className=\"color-recovered new-today\">\n                  + {nf.format(country.todayRecovered)}\n                </span>\n              )}\n            </div>\n            <div>\n              Active Cases\n              <span className=\"color-active\">{nf.format(country.active)}</span>\n            </div>\n          </section>\n        </article>\n      </Link>\n    </CountryCardStyles>\n  );\n}\n","import React, { useEffect } from 'react';\nimport * as Chart from 'chart.js';\n\nexport default function TimeLine({ timeline, timelineDataLoaded }) {\n  // let draw = Chart.controllers.line.prototype.draw;\n  // Chart.controllers.line.prototype.draw = function () {\n  //   draw.apply(this, arguments);\n  //   let ctx = this.chart.chart.ctx;\n  //   let _stroke = ctx.stroke;\n  //   ctx.stroke = function () {\n  //     ctx.save();\n  //     ctx.shadowColor = '#4b4b4b8e';\n  //     ctx.shadowBlur = 20;\n  //     ctx.shadowOffsetX = 1;\n  //     ctx.shadowOffsetY = 2;\n  //     _stroke.apply(this, arguments);\n  //     ctx.restore();\n  //   }\n  // };\n  Chart.defaults.LineWithLine = Chart.defaults.line;\n  Chart.controllers.LineWithLine = Chart.controllers.line.extend({\n    draw(ease) {\n      if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n        const activePoint = this.chart.tooltip._active[0];\n        const { ctx } = this.chart;\n        const { x } = activePoint.tooltipPosition();\n        const topY = this.chart.scales['y-axis-0'].top;\n        const bottomY = this.chart.scales['y-axis-0'].bottom;\n\n        // draw line\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(x, topY);\n        ctx.lineTo(x, bottomY);\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = '#fe3860';\n        // ctx.shadowBlur = 1;\n        ctx.stroke();\n        ctx.restore();\n      }\n      Chart.controllers.line.prototype.draw.call(this, ease);\n    },\n  });\n\n  // Mount graph cases\n  useEffect(() => {\n    if (timelineDataLoaded) {\n      const timelinedates = [];\n      const timelinedataCases = [];\n      const timelinedataDeaths = [];\n      const timelinedataRecovered = [];\n      const timelinedataActive = [];\n\n      Object.keys(timeline.cases).forEach(key => {\n        timelinedates.push(key);\n        timelinedataCases.push(timeline.cases[key]);\n      });\n\n      Object.keys(timeline.deaths).forEach(key => {\n        timelinedataDeaths.push(timeline.deaths[key]);\n      });\n\n      Object.keys(timeline.recovered).forEach(key => {\n        timelinedataRecovered.push(timeline.recovered[key]);\n      });\n\n      Object.keys(timeline.cases).forEach(key => {\n        timelinedataActive.push(\n          timeline.cases[key] -\n            (timeline.deaths[key] + timeline.recovered[key]),\n        );\n      });\n\n      const cav = document.getElementById('cav_cases').getContext('2d');\n      new Chart(cav, {\n        type: 'LineWithLine',\n        options: {\n          tooltips: {\n            mode: 'index',\n            intersect: false,\n          },\n          legend: {\n            labels: {\n              fontColor: 'white',\n            },\n          },\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  fontColor: 'white',\n                },\n              },\n            ],\n            xAxes: [\n              {\n                ticks: {\n                  fontColor: 'white',\n                },\n              },\n            ],\n          },\n        },\n        data: {\n          labels: timelinedates,\n          datasets: [\n            {\n              label: 'Total Cases',\n              fill: false,\n              lineTension: 0.1,\n              backgroundColor: 'rgba(14, 233, 203,0.4)',\n              borderColor: '#0ee9cb',\n              borderCapStyle: 'butt',\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: 'miter',\n              pointBorderColor: '#0ee9cb',\n              pointBackgroundColor: '#0ee9cb',\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: '#0ee9cb',\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\n              pointHoverBorderWidth: 2,\n              pointRadius: 2,\n              pointHitRadius: 2,\n              data: timelinedataCases.map(item => item),\n            },\n            {\n              label: 'Total Recovered',\n              fill: false,\n              lineTension: 0.1,\n              backgroundColor: 'rgba(52, 127, 213,0.4)',\n              borderColor: '#347fd5',\n              borderCapStyle: 'butt',\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: 'miter',\n              pointBorderColor: '#347fd5',\n              pointBackgroundColor: '#347fd5',\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: '#347fd5',\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\n              pointHoverBorderWidth: 2,\n              pointRadius: 2,\n              pointHitRadius: 2,\n              data: timelinedataRecovered.map(item => item),\n            },\n            {\n              label: 'Total Deaths',\n              fill: false,\n              lineTension: 0.1,\n              backgroundColor: 'rgba(243, 83, 83,0.4)',\n              borderColor: '#f35353',\n              borderCapStyle: 'butt',\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: 'miter',\n              pointBorderColor: '#f35353',\n              pointBackgroundColor: '#f35353',\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: '#f35353',\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\n              pointHoverBorderWidth: 2,\n              pointRadius: 2,\n              pointHitRadius: 2,\n              data: timelinedataDeaths.map(item => item),\n            },\n            {\n              label: 'Active cases',\n              fill: false,\n              lineTension: 0.1,\n              backgroundColor: 'rgba(255,193,55,0.4)',\n              borderColor: '#ffc137',\n              borderCapStyle: 'butt',\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: 'miter',\n              pointBorderColor: '#ffc137',\n              pointBackgroundColor: '#ffc137',\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: '#ffc137',\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\n              pointHoverBorderWidth: 2,\n              pointRadius: 2,\n              pointHitRadius: 2,\n              data: timelinedataActive.map(item => item),\n            },\n          ],\n        },\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timelineDataLoaded]);\n\n  return (\n    <>\n      <h2>Timeline cases and deaths</h2>\n      <canvas className=\"mt-4\" height=\"170rem\" id=\"cav_cases\" />\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport * as Chart from 'chart.js';\nimport api from '../../services/api';\n\nexport default function TimeLineCountries({ countries }) {\n  const [timelineCountries, setTimelineCountries] = useState();\n  const [chartLoaded, setChartLoaded] = useState(false);\n\n  useEffect(() => {\n    // console.log(countries)\n    if (countries[0] !== undefined && chartLoaded === false) {\n      const countriesIso = [];\n\n      for (let index = 0; index < 5; index++) {\n        countriesIso.push(countries[index].iso2);\n      }\n\n      const loadTopCountriesTimeLine = async () => {\n        const response = await api.post(\n          '/top_countries_timeline',\n          countriesIso,\n        );\n        setTimelineCountries(response.data);\n        setChartLoaded(true);\n      };\n\n      loadTopCountriesTimeLine();\n    }\n  }, [countries, chartLoaded]);\n\n  // Mount graph cases\n  useEffect(() => {\n    if (timelineCountries && chartLoaded === false) {\n      const timelinedates = [];\n      const timelineCountry = [];\n      const timelineCountryNames = [];\n      const datasets = [];\n\n      Object.keys(timelineCountries[0].timeline.cases).forEach(key => {\n        timelinedates.push(key);\n      });\n\n      for (let index = 0; index < timelineCountries.length; index++) {\n        timelineCountryNames.push(timelineCountries[index].country);\n        timelineCountry.push(timelineCountries[index].timeline.cases);\n\n        let randColor = `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n\n        if (randColor.length !== 7) {\n          randColor += '6';\n        }\n\n        datasets.push({\n          label: timelineCountryNames[index],\n          fill: false,\n          lineTension: 0.1,\n          borderColor: randColor,\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: randColor,\n          pointBackgroundColor: randColor,\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: randColor,\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 2,\n          pointHitRadius: 2,\n          data: Object.values(timelineCountry[index]).map(item => item),\n        });\n      }\n\n      const cav = document\n        .getElementById('cav_cases_top_countries')\n        .getContext('2d');\n      new Chart(cav, {\n        type: 'LineWithLine',\n        options: {\n          tooltips: {\n            mode: 'index',\n            intersect: false,\n          },\n          legend: {\n            labels: {\n              fontColor: 'white',\n            },\n          },\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  fontColor: 'white',\n                },\n              },\n            ],\n            xAxes: [\n              {\n                ticks: {\n                  fontColor: 'white',\n                },\n              },\n            ],\n          },\n        },\n        data: {\n          labels: timelinedates,\n          datasets,\n        },\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timelineCountries, chartLoaded]);\n\n  return (\n    <>\n      <h2>Timeline cases from top 5 countries</h2>\n      <canvas className=\"mt-4\" height=\"170rem\" id=\"cav_cases_top_countries\" />\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { colors } from '../../GlobalStyles';\n\nconst RecentStyle = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  overflow-y: auto;\n\n  background: ${colors.bgActive};\n  border-radius: 5px;\n  padding: 20px;\n  margin-bottom: 20px;\n\n  div {\n    figure {\n      display: flex;\n      img {\n        height: 40px;\n        border-radius: 20%;\n        box-shadow: 0.31rem 0.29rem 0.65rem rgba(0, 0, 0, 0.342);\n      }\n      figcaption {\n        margin-left: 20px;\n        margin-top: 8px;\n      }\n    }\n  }\n`;\n\nexport default RecentStyle;\n","import React, { useEffect, useState } from 'react';\n\nimport RecentStyle from './styles';\n\nexport default function RecentChange({ stateAtual, stateNovo }) {\n  const [textReturn, setTextReturn] = useState([]);\n  const textToState = [];\n\n  // console.log(stateAtual[0], stateNovo[0])\n\n  // Mount recent changes\n  useEffect(() => {\n    // ((stateAtual[0] !== undefined && stateNovo[0] !== undefined) && console.log(stateAtual[0], stateNovo[0]))\n    // console.log(stateAtual, stateNovo)\n    // const [executou, setExecutou] = useState(false);\n\n    if (stateAtual !== undefined) {\n      const compareObjects = () => {\n        const countriesAtual = stateAtual;\n        const countriesNovo = stateNovo;\n\n        function comparer(otherArray) {\n          return current => {\n            return (\n              otherArray.filter(other => {\n                return (\n                  other.cases === current.cases &&\n                  other.recovered === current.recovered &&\n                  other.deaths === current.deaths\n                );\n              }).length === 0\n            );\n          };\n        }\n\n        const onlyInA = countriesAtual.filter(comparer(countriesNovo));\n        const onlyInB = countriesNovo.filter(comparer(countriesAtual));\n\n        let result = onlyInA.concat(onlyInB);\n\n        // Verifica se teve alguma modificação\n        if (Object.keys(result).length !== 0 && result.constructor === Array) {\n          const compare = (a, b) => {\n            if (a.iso2 < b.iso2) {\n              return -1;\n            }\n            if (a.iso2 > b.iso2) {\n              return 1;\n            }\n            return 0;\n          };\n\n          result = result.sort(compare);\n\n          for (let index = 1; index < result.length; index++) {\n            if (result[index].iso2 === result[index - 1].iso2) {\n              if (result[index].cases > result[index - 1].cases) {\n                textToState[index] = {\n                  text: `${result[index].country}: +${\n                    result[index].cases - result[index - 1].cases\n                  } cases `,\n                  iso2: result[index].iso2,\n                };\n              }\n\n              if (result[index].recovered > result[index - 1].recovered) {\n                if (textToState[index] === undefined) {\n                  textToState[index] = {\n                    text: `${result[index].country}: +${\n                      result[index].recovered - result[index - 1].recovered\n                    } recovered `,\n                    iso2: result[index].iso2,\n                  };\n                } else {\n                  textToState[index].text = `${textToState[index].text}+${\n                    result[index].recovered - result[index - 1].recovered\n                  } recovered `;\n                }\n              }\n\n              if (result[index].deaths > result[index - 1].deaths) {\n                if (textToState[index] === undefined) {\n                  textToState[index] = {\n                    text: `${result[index].country}: +${\n                      result[index].deaths - result[index - 1].deaths\n                    } deaths `,\n                    iso2: result[index].iso2,\n                  };\n                } else {\n                  textToState[index].text = `${textToState[index].text}+${\n                    result[index].deaths - result[index - 1].deaths\n                  } deaths `;\n                }\n              }\n\n              if (textToState[index] !== undefined) {\n                textToState[index].text = `${\n                  textToState[index].text\n                } (${new Date(Date.now()).toLocaleString()})`;\n              }\n            }\n          }\n\n          const parsedText = textToState.filter(\n            textState => textState !== undefined,\n          );\n\n          setTextReturn([...parsedText, ...textReturn]);\n        }\n      };\n      compareObjects();\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stateAtual, stateNovo]);\n\n  return (\n    <RecentStyle>\n      <h2>Recent changes</h2>\n      {/* {console.log(textReturn)} */}\n      <div className=\"change-content\">\n        {textReturn.map(change => (\n          <div key={change.text + change.iso2}>\n            <figure>\n              <img\n                src={`https://cdn.u21.io/flags/4x3/${change.iso2.toLowerCase()}.svg`}\n                alt={`flag ${change.text}`}\n              />\n              <figcaption className=\"text-bold font-smaller\">\n                <p>{change.text}</p>\n              </figcaption>\n            </figure>\n          </div>\n        ))}\n      </div>\n    </RecentStyle>\n  );\n}\n","import React, { useEffect } from 'react';\nimport * as Chart from 'chart.js';\n\nexport default function PieCases({\n  data,\n  timelineDataLoaded,\n  country = 'Global',\n}) {\n  // Mount pie cases\n  useEffect(() => {\n    if (timelineDataLoaded) {\n      const cav = document.getElementById(`pie_cases`).getContext('2d');\n      new Chart(cav, {\n        type: 'pie',\n        options: {\n          legend: {\n            labels: {\n              fontColor: 'white',\n            },\n          },\n        },\n        data: {\n          labels: ['Active', 'Recovered', 'Death'],\n          datasets: [\n            {\n              backgroundColor: ['#ffc137', '#347fd5', '#f35353'],\n              data: [data.active, data.recovered, data.deaths],\n            },\n          ],\n        },\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timelineDataLoaded]);\n\n  return (\n    <>\n      <h2>{country} active, deaths and recovered</h2>\n      <canvas className=\"mt-4\" height=\"110rem\" id=\"pie_cases\" />\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { colors } from '../../GlobalStyles';\n\nexport const ChartsStyle = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  section {\n    width: calc(50% - 1rem);\n    margin: 0.5rem;\n\n    box-shadow: 0.2rem 1rem 0.65rem rgba(0, 0, 0, 0.342);\n    position: relative;\n  }\n\n  @media all and (max-width: 499px) {\n    display: none !important;\n  }\n`;\n\nexport const GlobalDataHeader = styled.main`\n  @media all and (min-width: 499px) {\n    margin-top: 1rem;\n    display: flex;\n    flex-wrap: wrap;\n    @media all and (max-width: 1500px) {\n      flex-direction: column;\n    }\n\n    .global-data {\n      flex: 0 25%;\n    }\n    .countries-data {\n      flex: 1;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: center;\n\n      border-radius: 12px;\n\n      .countries-panel {\n        border-radius: 12px;\n        background: ${colors.background};\n\n        display: flex;\n        flex-wrap: wrap;\n\n        height: 50rem;\n        overflow-y: scroll;\n      }\n    }\n  }\n`;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { NotificationContainer } from 'react-notifications';\n// NotificationManager\nimport 'react-notifications/lib/notifications.css';\nimport Loading from 'react-loading';\n\nimport api from '../../services/api';\n\nimport GlobalCard from '../../components/GlobalCard';\nimport CountryCard from '../../components/CountryCard';\nimport TimeLine from '../../components/TimeLine';\nimport TimeLineCountries from '../../components/TimeLineCountries';\nimport RecentChange from '../../components/RecentChanges';\nimport PieCases from '../../components/PieActiveDeathRecovered';\n\nimport { ChartsStyle, GlobalDataHeader } from './styles';\n\nexport default function Main() {\n  const [countries, setCountries] = useState([]);\n  // const [oldCountries, setOldCountries] = useState([]);\n  const [globalData, setGlobalData] = useState([]);\n  const [isPageLoaded, setIsPageLoaded] = useState(false);\n  const [globalDataLoaded, setGlobalDataLoaded] = useState(false);\n  const [lastUpdatedSeconds, setLastUpdatedSeconds] = useState(0);\n  const [updatePageCount, setUpdatePageCount] = useState(0);\n  const [timelineGlobal, setTimelineGlobal] = useState();\n  const [pieLoaded, setPieLoaded] = useState(false);\n\n  const oldCountries = useRef();\n\n  // Get Country Data\n  useEffect(() => {\n    async function loadData() {\n      const [responseCountries, responseGlobal] = await Promise.all([\n        api.get(`/countries`),\n        api.get(`/global`),\n      ]);\n\n      const ContriesObject = Object.values(responseCountries.data);\n      if (countries[0] !== undefined) {\n        Object.keys(ContriesObject).forEach(key => {\n          if (ContriesObject[key].updated < countries[key].updated) {\n            ContriesObject[key] = countries[key];\n          }\n        });\n      }\n\n      setCountries(ContriesObject);\n      setGlobalData(responseGlobal.data);\n      setPieLoaded(true);\n      setIsPageLoaded(true);\n    }\n    loadData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [updatePageCount]);\n\n  useEffect(() => {\n    let interval = null;\n    if (isPageLoaded) {\n      interval = setInterval(() => {\n        setLastUpdatedSeconds(lastUpdatedSeconds => lastUpdatedSeconds + 1);\n        if (lastUpdatedSeconds % 30 === 0 && lastUpdatedSeconds !== 0) {\n          // setOldCountries(countries)\n          oldCountries.current = countries;\n          setUpdatePageCount(updatePageCount => updatePageCount + 1);\n          setLastUpdatedSeconds(0);\n        }\n      }, 1000);\n    }\n\n    return () => clearInterval(interval);\n  }, [isPageLoaded, lastUpdatedSeconds, countries]);\n\n  const prevCountries = oldCountries.current;\n\n  useEffect(() => {\n    api.get(`/global_timeline`).then(response => {\n      setTimelineGlobal(response.data);\n      setGlobalDataLoaded(true);\n      // setChartLoaded(true);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return isPageLoaded === false ? (\n    <div className=\"loading\">\n      <Loading type=\"bars\" color=\"#eee\" />\n    </div>\n  ) : (\n    <div className=\"container-fluid py-3\">\n      <NotificationContainer />\n\n      <ChartsStyle>\n        <section className=\"chart-div\">\n          <TimeLine\n            timeline={timelineGlobal}\n            timelineDataLoaded={globalDataLoaded}\n          />\n        </section>\n        <section className=\"chart-div\">\n          <TimeLineCountries countries={countries} />\n        </section>\n        {/* <section className=\"break\" style={{ margin: 0 }} /> */}\n        <section className=\"chart-div\">\n          <PieCases data={globalData} timelineDataLoaded={pieLoaded} />\n        </section>\n        <section className=\"chart-div\">\n          {/* {(oldCountries[0] !== undefined && console.log(`Old: ${oldCountries[0]['cases']} novo: ${countries[0]['cases']}`))} */}\n          <RecentChange stateAtual={prevCountries} stateNovo={countries} />\n        </section>\n      </ChartsStyle>\n\n      <GlobalDataHeader>\n        <section className=\"global-data\">\n          <GlobalCard globaldata={globalData} />\n        </section>\n        <section className=\"countries-data\">\n          <h1 className=\"col-12 title-components\">Countries Data</h1>\n          <div className=\"countries-panel\">\n            {countries.map(dataMap => (\n              <CountryCard key={dataMap.country} country={dataMap} />\n            ))}\n          </div>\n        </section>\n      </GlobalDataHeader>\n    </div>\n  );\n}\n","import styled from 'styled-components';\nimport { colors } from '../../GlobalStyles';\n\nconst CountryDetailsCardStyles = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem 0;\n  font-weight: 800;\n  font-size: 18px;\n\n  .flag {\n    display: flex;\n    font-size: x-large;\n    align-items: center;\n    @media all and (max-width: 499px) {\n      justify-content: center;\n    }\n    img {\n      height: 48px;\n      border-radius: 20%;\n    }\n    figcaption {\n      margin-left: 1rem;\n    }\n  }\n\n  .cases {\n    display: flex;\n    flex-wrap: wrap;\n    @media all and (min-width: 500px) {\n      background: ${colors.bgActive};\n      border-radius: 0.5rem;\n    }\n    div {\n      @media all and (max-width: 499px) {\n        background: ${colors.bgActive};\n        border-radius: 0.5rem;\n      }\n      margin: 0.5rem;\n      padding: 0.5rem;\n      flex: 1 1 auto;\n      display: flex;\n      flex-direction: column;\n      text-align: center;\n      .country-data-numbers {\n        font-size: 2.5rem;\n        @media all and (max-width: 499px) {\n          font-size: 1.7rem;\n        }\n        font-weight: 800;\n      }\n    }\n  }\n`;\nexport default CountryDetailsCardStyles;\n","import React from 'react';\nimport CountryDetailsCardStyles from './styles';\n\nconst nf = new Intl.NumberFormat();\n\nexport default function CountryDetailsCard({ country }) {\n  country.iso2 = country.country === 'MS Zaandam' ? 'US' : country.iso2;\n  country.iso2 = country.country === 'Diamond Princess' ? 'US' : country.iso2;\n\n  return (\n    <CountryDetailsCardStyles>\n      <figure className=\"flag\">\n        <img\n          src={`https://cdn.u21.io/flags/4x3/${country.iso2.toLowerCase()}.svg`}\n          alt={`flag ${country.country}`}\n        />\n        <figcaption>{country.country}</figcaption>\n      </figure>\n      <section className=\"cases\">\n        <div>\n          Cases\n          <span className=\"country-data-numbers color-cases\">\n            {nf.format(country.cases)}\n          </span>\n          New Cases Today\n          <span className=\"country-data-numbers color-new-case\">\n            {nf.format(country.todayCases)}\n          </span>\n        </div>\n        <div>\n          Deaths\n          <span className=\"country-data-numbers color-death\">\n            {nf.format(country.deaths)}\n          </span>\n          New Deaths Today\n          <span className=\"country-data-numbers color-new-death\">\n            {nf.format(country.todayDeaths)}\n          </span>\n        </div>\n        <div>\n          Recovered\n          <span className=\"country-data-numbers color-recovered\">\n            {nf.format(country.recovered)}\n          </span>\n          New Recovered Today\n          <span className=\"country-data-numbers color-new-recoveries\">\n            {nf.format(country.todayRecovered)}\n          </span>\n        </div>\n        <div>\n          Active Cases\n          <span className=\"country-data-numbers color-active\">\n            {nf.format(country.active)}\n          </span>\n          Tests\n          <span className=\"country-data-numbers color-tests\">\n            {nf.format(country.tests)}\n          </span>\n        </div>\n        <div>\n          Population\n          <span className=\"country-data-numbers color-affected\">\n            {nf.format(country.population)}\n          </span>\n          Critical\n          <span className=\"country-data-numbers color-critical\">\n            {nf.format(country.critical)}\n          </span>\n        </div>\n      </section>\n    </CountryDetailsCardStyles>\n  );\n}\n","import React, { useEffect } from 'react';\nimport * as Chart from 'chart.js';\n\nexport default function TimeLine({ timeline, timelineDataLoaded }) {\n  // let draw = Chart.controllers.line.prototype.draw;\n  // Chart.controllers.line.prototype.draw = function () {\n  //   draw.apply(this, arguments);\n  //   let ctx = this.chart.chart.ctx;\n  //   let _stroke = ctx.stroke;\n  //   ctx.stroke = function () {\n  //     ctx.save();\n  //     ctx.shadowColor = '#4b4b4b8e';\n  //     ctx.shadowBlur = 20;\n  //     ctx.shadowOffsetX = 1;\n  //     ctx.shadowOffsetY = 2;\n  //     _stroke.apply(this, arguments);\n  //     ctx.restore();\n  //   }\n  // };\n  Chart.defaults.LineWithLine = Chart.defaults.line;\n  Chart.controllers.LineWithLine = Chart.controllers.line.extend({\n    draw(ease) {\n      if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n        const activePoint = this.chart.tooltip._active[0];\n        const { ctx } = this.chart;\n        const { x } = activePoint.tooltipPosition();\n        const topY = this.chart.scales['y-axis-0'].top;\n        const bottomY = this.chart.scales['y-axis-0'].bottom;\n\n        // draw line\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(x, topY);\n        ctx.lineTo(x, bottomY);\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = '#fe3860';\n        // ctx.shadowBlur = 1;\n        ctx.stroke();\n        ctx.restore();\n      }\n      Chart.controllers.line.prototype.draw.call(this, ease);\n    },\n  });\n\n  // Mount graph cases\n  useEffect(() => {\n    if (timelineDataLoaded) {\n      const timelinedates = [];\n      const timelinedataCases = [];\n      const timelinedataDeaths = [];\n      const timelinedataRecovered = [];\n      const timelinedataActive = [];\n\n      Object.keys(timeline.cases).forEach(key => {\n        timelinedates.push(key);\n        timelinedataCases.push(timeline.cases[key]);\n      });\n\n      Object.keys(timeline.deaths).forEach(key => {\n        timelinedataDeaths.push(timeline.deaths[key]);\n      });\n\n      const cav = document.getElementById('cav_cases_daily').getContext('2d');\n      new Chart(cav, {\n        type: 'LineWithLine',\n        options: {\n          tooltips: {\n            mode: 'index',\n            intersect: false,\n          },\n          legend: {\n            labels: {\n              fontColor: 'white',\n            },\n          },\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  fontColor: 'white',\n                },\n              },\n            ],\n            xAxes: [\n              {\n                ticks: {\n                  fontColor: 'white',\n                },\n              },\n            ],\n          },\n        },\n        data: {\n          labels: timelinedates,\n          datasets: [\n            {\n              label: 'Daily Cases',\n              fill: false,\n              lineTension: 0.1,\n              backgroundColor: 'rgba(255, 138, 55,0.4)',\n              borderColor: '#ff8a37',\n              borderCapStyle: 'butt',\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: 'miter',\n              pointBorderColor: '#ff8a37',\n              pointBackgroundColor: '#ff8a37',\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: '#ff8a37',\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\n              pointHoverBorderWidth: 2,\n              pointRadius: 2,\n              pointHitRadius: 2,\n              data: timelinedataCases.map(item => item),\n            },\n            {\n              label: 'Daily Deaths',\n              fill: false,\n              lineTension: 0.1,\n              backgroundColor: 'rgba(175, 28, 28,0.4)',\n              borderColor: '#af1c1c',\n              borderCapStyle: 'butt',\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: 'miter',\n              pointBorderColor: '#af1c1c',\n              pointBackgroundColor: '#af1c1c',\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: '#af1c1c',\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\n              pointHoverBorderWidth: 2,\n              pointRadius: 2,\n              pointHitRadius: 2,\n              data: timelinedataDeaths.map(item => item),\n            },\n          ],\n        },\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timelineDataLoaded]);\n\n  return (\n    <>\n      <h2>Timeline daily cases and deaths</h2>\n      <canvas className=\"mt-4\" height=\"170rem\" id=\"cav_cases_daily\" />\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport * as Chart from 'chart.js';\n\nexport default function PieCases({ data, timelineDataLoaded }) {\n  // Mount pie tests\n  useEffect(() => {\n    if (timelineDataLoaded) {\n      const cav = document.getElementById(`pie_tests`).getContext('2d');\n      new Chart(cav, {\n        type: 'pie',\n        options: {\n          legend: {\n            labels: {\n              fontColor: 'white',\n            },\n          },\n        },\n        data: {\n          labels: [`${data.country} population`, 'Tests'],\n          datasets: [\n            {\n              backgroundColor: [\n                // \"#3e95cd\",\n                '#da8213',\n                '#6bfb31',\n              ],\n              data: [\n                // globalData.population,\n                data.population,\n                data.tests,\n              ],\n            },\n          ],\n        },\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timelineDataLoaded]);\n\n  return (\n    <>\n      <h2>{data.country} Population / Tests</h2>\n      <canvas className=\"mt-4\" height=\"110rem\" id=\"pie_tests\" />\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nconst CountryStyles = styled.div`\n  img {\n    height: 48px;\n    border-radius: 20%;\n  }\n`;\nexport default CountryStyles;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loading from 'react-loading';\nimport api from '../../services/api';\n\nimport CountryData from '../../components/CountryDetailsCard';\nimport TimeLine from '../../components/TimeLine';\nimport TimeLineDaily from '../../components/TimeLineDaily';\nimport PieCases from '../../components/PieActiveDeathRecovered';\nimport PieTests from '../../components/PieTests';\n\nimport CountryStyles from './styles';\n\nexport default function Country() {\n  const { country_code: countryCode } = useParams();\n  const [isPageLoaded, setIsPageLoaded] = useState(false);\n  const [isTimeLineDataLoaded, setIsTimeLineDataLoaded] = useState(false);\n  const [isTimeLineNewDataLoaded, setIsTimeLineNewDataLoaded] = useState(false);\n  const [country, setCountry] = useState([]);\n  const [countryTimeline, setCountryTimeline] = useState([]);\n  const [countryTimelineNew, setCountryTimelineNew] = useState([]);\n\n  // Get Country Timeline\n  useEffect(() => {\n    const loadCountryTimeLine = async () => {\n      const response = await api.get(`/country_timeline/${countryCode}`);\n      setCountryTimeline(response.data.timeline);\n      setIsTimeLineDataLoaded(true);\n    };\n\n    loadCountryTimeLine();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Get Country New Per Day Timeline\n  useEffect(() => {\n    const loadCountryTimeLineNew = async () => {\n      const response = await api.get(`/country_timeline_new/${countryCode}`);\n      setCountryTimelineNew(response.data.timeline);\n\n      setIsTimeLineNewDataLoaded(true);\n    };\n\n    loadCountryTimeLineNew();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Get Country Data\n  useEffect(() => {\n    const loadCountryData = async () => {\n      const response = await api.get(`/country/${countryCode}`);\n      setCountry(response.data);\n      setIsPageLoaded(true);\n    };\n\n    loadCountryData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return !isPageLoaded ? (\n    <div className=\"loading\">\n      <Loading type=\"bars\" color=\"#eee\" />\n    </div>\n  ) : (\n    <CountryStyles className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <CountryData country={country} />\n        </div>\n        <div className=\"col-lg-6 col-md-12\">\n          <section className=\" chart-div\">\n            <TimeLine\n              timeline={countryTimeline}\n              timelineDataLoaded={isTimeLineDataLoaded}\n            />\n          </section>\n        </div>\n        <div className=\"col-lg-6 col-md-12\">\n          <section className=\" chart-div\">\n            <TimeLineDaily\n              timeline={countryTimelineNew}\n              timelineDataLoaded={isTimeLineNewDataLoaded}\n            />\n          </section>\n        </div>\n        <div className=\"col-lg-6 col-md-12\">\n          <section className=\"chart-div\">\n            <PieCases\n              data={country}\n              timelineDataLoaded={isTimeLineDataLoaded}\n              country={country.country}\n              pageLoaded={isPageLoaded}\n            />\n          </section>\n        </div>\n        <div className=\"col-lg-6 col-md-12\">\n          <section className=\"chart-div\">\n            <PieTests\n              data={country}\n              timelineDataLoaded={isTimeLineDataLoaded}\n            />\n          </section>\n        </div>\n      </div>\n    </CountryStyles>\n  );\n}\n","import styled from 'styled-components';\nimport { colors } from '../../GlobalStyles';\n\nconst HeaderStyles = styled.header`\n  padding: 0.5rem;\n  height: 100%;\n  width: 100%;\n  background: ${colors.bgActive};\n  font-size: 18px;\n  font-weight: bold;\n  color: ${colors.mainText};\n  display: flex;\n  * {\n    display: flex;\n  }\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  @media all and (max-width: 499px) {\n    flex-direction: column;\n    height: 120px;\n  }\n  .title-brand {\n    align-items: center;\n\n    .logo {\n      margin: auto 0.5rem;\n      width: 32px;\n      height: 32px;\n    }\n\n    .blob {\n      background: black;\n      border-radius: 50%;\n      box-shadow: 0 0 0 0 rgba(0, 0, 0, 1);\n      margin: 10px;\n      height: 20px;\n      width: 20px;\n      transform: scale(1);\n      animation: pulse-black 2s infinite;\n    }\n\n    @keyframes pulse-black {\n      0% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.7);\n      }\n\n      70% {\n        transform: scale(1);\n        box-shadow: 0 0 0 10px rgba(0, 0, 0, 0);\n      }\n\n      100% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);\n      }\n    }\n\n    .blob.white {\n      background: white;\n      box-shadow: 0 0 0 0 rgba(255, 255, 255, 1);\n      animation: pulse-white 2s infinite;\n    }\n\n    @keyframes pulse-white {\n      0% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.7);\n      }\n\n      70% {\n        transform: scale(1);\n        box-shadow: 0 0 0 10px rgba(255, 255, 255, 0);\n      }\n\n      100% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);\n      }\n    }\n\n    .blob.red {\n      background: rgba(255, 82, 82, 1);\n      box-shadow: 0 0 0 0 rgba(255, 82, 82, 1);\n      animation: pulse-red 2s infinite;\n    }\n\n    @keyframes pulse-red {\n      0% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(255, 82, 82, 0.7);\n      }\n\n      70% {\n        transform: scale(1);\n        box-shadow: 0 0 0 10px rgba(255, 82, 82, 0);\n      }\n\n      100% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(255, 82, 82, 0);\n      }\n    }\n\n    .blob.orange {\n      background: rgba(255, 121, 63, 1);\n      box-shadow: 0 0 0 0 rgba(255, 121, 63, 1);\n      animation: pulse-orange 2s infinite;\n    }\n\n    @keyframes pulse-orange {\n      0% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(255, 121, 63, 0.7);\n      }\n\n      70% {\n        transform: scale(1);\n        box-shadow: 0 0 0 10px rgba(255, 121, 63, 0);\n      }\n\n      100% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(255, 121, 63, 0);\n      }\n    }\n\n    .blob.yellow {\n      background: rgba(255, 177, 66, 1);\n      box-shadow: 0 0 0 0 rgba(255, 177, 66, 1);\n      animation: pulse-yellow 2s infinite;\n    }\n\n    @keyframes pulse-yellow {\n      0% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(255, 177, 66, 0.7);\n      }\n\n      70% {\n        transform: scale(1);\n        box-shadow: 0 0 0 10px rgba(255, 177, 66, 0);\n      }\n\n      100% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(255, 177, 66, 0);\n      }\n    }\n\n    .blob.blue {\n      background: rgba(52, 172, 224, 1);\n      box-shadow: 0 0 0 0 rgba(52, 172, 224, 1);\n      animation: pulse-blue 2s infinite;\n    }\n\n    @keyframes pulse-blue {\n      0% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(52, 172, 224, 0.7);\n      }\n\n      70% {\n        transform: scale(1);\n        box-shadow: 0 0 0 10px rgba(52, 172, 224, 0);\n      }\n\n      100% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(52, 172, 224, 0);\n      }\n    }\n\n    .blob.green {\n      background: rgba(51, 217, 178, 1);\n      box-shadow: 0 0 0 0 rgba(51, 217, 178, 1);\n      animation: pulse-green 2s infinite;\n    }\n\n    @keyframes pulse-green {\n      0% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(51, 217, 178, 0.7);\n      }\n\n      70% {\n        transform: scale(1);\n        box-shadow: 0 0 0 10px rgba(51, 217, 178, 0);\n      }\n\n      100% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(51, 217, 178, 0);\n      }\n    }\n\n    .blob.purple {\n      background: rgba(142, 68, 173, 1);\n      box-shadow: 0 0 0 0 rgba(142, 68, 173, 1);\n      animation: pulse-purple 2s infinite;\n    }\n\n    @keyframes pulse-purple {\n      0% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(142, 68, 173, 0.7);\n      }\n\n      70% {\n        transform: scale(1);\n        box-shadow: 0 0 0 10px rgba(142, 68, 173, 0);\n      }\n\n      100% {\n        transform: scale(0.95);\n        box-shadow: 0 0 0 0 rgba(142, 68, 173, 0);\n      }\n    }\n  }\n`;\nexport default HeaderStyles;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport HeaderStyles from './styles';\nimport rootpath from '../../services/getRootPath';\n\nimport logo from '../../assets/logo.png';\n\nconst Header = () => (\n  <HeaderStyles>\n    <Link to={rootpath} className=\"title-brand\">\n      <img src={logo} alt=\"Covid Dashboard\" className=\"logo\" />\n      DASHBOARD\n      <div className=\"blob red\" />\n    </Link>\n    <nav className=\"my-2 my-md-0 mr-md-3\">\n      <Link to={rootpath} className=\"p-2 text-white\">\n        Features\n      </Link>\n    </nav>\n    {/* <a class=\"btn btn-outline-primary\" href=\"#\">Sign up</a> */}\n  </HeaderStyles>\n);\n\nexport default Header;\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Main from './pages/Main';\nimport Country from './pages/Country';\nimport Header from './components/Header';\n\nimport rootpath from './services/getRootPath';\n\nexport default function Routes() {\n  return (\n    <BrowserRouter>\n      <Route path={rootpath} component={Header} />\n      <Route exact path={rootpath} component={Main} />\n      <Route exact path={`${rootpath}:country_code`} component={Country} />\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './routes';\n\nimport GlobalStyles from './GlobalStyles';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n    <GlobalStyles />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}